Terminals unused in grammar

   ERROR


State 8 conflicts: 1 shift/reduce
State 12 conflicts: 2 shift/reduce
State 20 conflicts: 2 shift/reduce
State 23 conflicts: 1 shift/reduce
State 66 conflicts: 1 shift/reduce
State 69 conflicts: 1 shift/reduce
State 70 conflicts: 1 shift/reduce
State 90 conflicts: 1 shift/reduce
State 98 conflicts: 1 shift/reduce
State 99 conflicts: 1 shift/reduce
State 100 conflicts: 1 shift/reduce
State 101 conflicts: 1 shift/reduce
State 102 conflicts: 1 shift/reduce
State 103 conflicts: 1 shift/reduce
State 104 conflicts: 1 shift/reduce
State 136 conflicts: 9 shift/reduce
State 149 conflicts: 9 shift/reduce


Grammar

    0 $accept: program $end

    1 program: class_list

    2 class_list: class ';'
    3           | class_list class ';'
    4           | class_list error ';'

    5 class: CLASS TYPEID '{' feature_list '}'
    6      | CLASS TYPEID INHERITS TYPEID '{' feature_list '}'
    7      | error

    8 feature_list: %empty
    9             | feature ';'
   10             | feature_list feature ';'
   11             | feature_list error ';'

   12 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' expr '}'
   13        | OBJECTID ':' TYPEID
   14        | OBJECTID ':' TYPEID ASSIGN expr
   15        | error

   16 formal_list: %empty
   17            | formal
   18            | formal_list ',' formal
   19            | formal_list ',' error

   20 formal: OBJECTID ':' TYPEID

   21 expr_list_comma_sep: %empty
   22                    | expr
   23                    | expr_list_comma_sep ',' expr
   24                    | expr_list_comma_sep ',' error

   25 expr_list_semicolon_sep: expr ';'
   26                        | expr_list_semicolon_sep expr ';'
   27                        | error ';'

   28 expr: OBJECTID ASSIGN expr
   29     | expr '.' OBJECTID '(' expr_list_comma_sep ')'
   30     | expr '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   31     | OBJECTID '(' expr_list_comma_sep ')'
   32     | IF expr THEN expr ELSE expr FI
   33     | WHILE expr LOOP expr POOL
   34     | '{' expr_list_semicolon_sep '}'
   35     | LET expr_let_body
   36     | CASE expr OF case_branch_list ESAC
   37     | NEW TYPEID
   38     | ISVOID expr
   39     | expr '+' expr
   40     | expr '-' expr
   41     | expr '*' expr
   42     | expr '/' expr
   43     | '~' expr
   44     | expr '<' expr
   45     | expr LE expr
   46     | expr '=' expr
   47     | NOT expr
   48     | '(' expr ')'
   49     | OBJECTID
   50     | INT_CONST
   51     | STR_CONST
   52     | BOOL_CONST

   53 expr_let_body: OBJECTID ':' TYPEID IN expr
   54              | OBJECTID ':' TYPEID ASSIGN expr IN expr
   55              | OBJECTID ':' TYPEID ',' expr_let_body
   56              | OBJECTID ':' TYPEID ASSIGN expr ',' expr_let_body
   57              | error ',' expr_let_body

   58 case_branch_list: case_ ';'
   59                 | case_branch_list case_ ';'
   60                 | case_branch_list error ';'

   61 case_: OBJECTID ':' TYPEID DARROW expr


Terminals, with rules where they appear

$end (0) 0
'(' (40) 12 29 30 31 48
')' (41) 12 29 30 31 48
'*' (42) 41
'+' (43) 39
',' (44) 18 19 23 24 55 56 57
'-' (45) 40
'.' (46) 29 30
'/' (47) 42
':' (58) 12 13 14 20 53 54 55 56 61
';' (59) 2 3 4 9 10 11 25 26 27 58 59 60
'<' (60) 44
'=' (61) 46
'@' (64) 30
'{' (123) 5 6 12 34
'}' (125) 5 6 12 34
'~' (126) 43
error (256) 4 7 11 15 19 24 27 57 60
CLASS (258) 5 6
ELSE (259) 32
FI (260) 32
IF (261) 32
IN (262) 53 54
INHERITS (263) 6
LET (264) 35
LOOP (265) 33
POOL (266) 33
THEN (267) 32
WHILE (268) 33
CASE (269) 36
ESAC (270) 36
OF (271) 36
DARROW (272) 61
NEW (273) 37
ISVOID (274) 38
STR_CONST (275) 51
INT_CONST (276) 50
BOOL_CONST (277) 52
TYPEID (278) 5 6 12 13 14 20 30 37 53 54 55 56 61
OBJECTID (279) 12 13 14 20 28 29 30 31 49 53 54 55 56 61
ASSIGN (280) 14 28 54 56
NOT (281) 47
LE (282) 45
ERROR (283)


Nonterminals, with rules where they appear

$accept (45)
    on left: 0
program (46)
    on left: 1, on right: 0
class_list (47)
    on left: 2 3 4, on right: 1 3 4
class (48)
    on left: 5 6 7, on right: 2 3
feature_list (49)
    on left: 8 9 10 11, on right: 5 6 10 11
feature (50)
    on left: 12 13 14 15, on right: 9 10
formal_list (51)
    on left: 16 17 18 19, on right: 12 18 19
formal (52)
    on left: 20, on right: 17 18
expr_list_comma_sep (53)
    on left: 21 22 23 24, on right: 23 24 29 30 31
expr_list_semicolon_sep (54)
    on left: 25 26 27, on right: 26 34
expr (55)
    on left: 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45
    46 47 48 49 50 51 52, on right: 12 14 22 23 25 26 28 29 30 32 33
    36 38 39 40 41 42 43 44 45 46 47 48 53 54 56 61
expr_let_body (56)
    on left: 53 54 55 56 57, on right: 35 55 56 57
case_branch_list (57)
    on left: 58 59 60, on right: 36 59 60
case_ (58)
    on left: 61, on right: 58 59


State 0

    0 $accept: . program $end
    1 program: . class_list
    2 class_list: . class ';'
    3           | . class_list class ';'
    4           | . class_list error ';'
    5 class: . CLASS TYPEID '{' feature_list '}'
    6      | . CLASS TYPEID INHERITS TYPEID '{' feature_list '}'
    7      | . error

    error  shift, and go to state 1
    CLASS  shift, and go to state 2

    program     go to state 3
    class_list  go to state 4
    class       go to state 5


State 1

    7 class: error .

    $default  reduce using rule 7 (class)


State 2

    5 class: CLASS . TYPEID '{' feature_list '}'
    6      | CLASS . TYPEID INHERITS TYPEID '{' feature_list '}'

    TYPEID  shift, and go to state 6


State 3

    0 $accept: program . $end

    $end  shift, and go to state 7


State 4

    1 program: class_list .
    3 class_list: class_list . class ';'
    4           | class_list . error ';'
    5 class: . CLASS TYPEID '{' feature_list '}'
    6      | . CLASS TYPEID INHERITS TYPEID '{' feature_list '}'
    7      | . error

    error  shift, and go to state 8
    CLASS  shift, and go to state 2

    $end  reduce using rule 1 (program)

    class  go to state 9


State 5

    2 class_list: class . ';'

    ';'  shift, and go to state 10


State 6

    5 class: CLASS TYPEID . '{' feature_list '}'
    6      | CLASS TYPEID . INHERITS TYPEID '{' feature_list '}'

    INHERITS  shift, and go to state 11
    '{'       shift, and go to state 12


State 7

    0 $accept: program $end .

    $default  accept


State 8

    4 class_list: class_list error . ';'
    7 class: error .

    ';'  shift, and go to state 13

    ';'  [reduce using rule 7 (class)]


State 9

    3 class_list: class_list class . ';'

    ';'  shift, and go to state 14


State 10

    2 class_list: class ';' .

    $default  reduce using rule 2 (class_list)


State 11

    6 class: CLASS TYPEID INHERITS . TYPEID '{' feature_list '}'

    TYPEID  shift, and go to state 15


State 12

    5 class: CLASS TYPEID '{' . feature_list '}'
    8 feature_list: . %empty
    9             | . feature ';'
   10             | . feature_list feature ';'
   11             | . feature_list error ';'
   12 feature: . OBJECTID '(' formal_list ')' ':' TYPEID '{' expr '}'
   13        | . OBJECTID ':' TYPEID
   14        | . OBJECTID ':' TYPEID ASSIGN expr
   15        | . error

    error     shift, and go to state 16
    OBJECTID  shift, and go to state 17

    error     [reduce using rule 8 (feature_list)]
    OBJECTID  [reduce using rule 8 (feature_list)]
    '}'       reduce using rule 8 (feature_list)

    feature_list  go to state 18
    feature       go to state 19


State 13

    4 class_list: class_list error ';' .

    $default  reduce using rule 4 (class_list)


State 14

    3 class_list: class_list class ';' .

    $default  reduce using rule 3 (class_list)


State 15

    6 class: CLASS TYPEID INHERITS TYPEID . '{' feature_list '}'

    '{'  shift, and go to state 20


State 16

   15 feature: error .

    $default  reduce using rule 15 (feature)


State 17

   12 feature: OBJECTID . '(' formal_list ')' ':' TYPEID '{' expr '}'
   13        | OBJECTID . ':' TYPEID
   14        | OBJECTID . ':' TYPEID ASSIGN expr

    '('  shift, and go to state 21
    ':'  shift, and go to state 22


State 18

    5 class: CLASS TYPEID '{' feature_list . '}'
   10 feature_list: feature_list . feature ';'
   11             | feature_list . error ';'
   12 feature: . OBJECTID '(' formal_list ')' ':' TYPEID '{' expr '}'
   13        | . OBJECTID ':' TYPEID
   14        | . OBJECTID ':' TYPEID ASSIGN expr
   15        | . error

    error     shift, and go to state 23
    OBJECTID  shift, and go to state 17
    '}'       shift, and go to state 24

    feature  go to state 25


State 19

    9 feature_list: feature . ';'

    ';'  shift, and go to state 26


State 20

    6 class: CLASS TYPEID INHERITS TYPEID '{' . feature_list '}'
    8 feature_list: . %empty
    9             | . feature ';'
   10             | . feature_list feature ';'
   11             | . feature_list error ';'
   12 feature: . OBJECTID '(' formal_list ')' ':' TYPEID '{' expr '}'
   13        | . OBJECTID ':' TYPEID
   14        | . OBJECTID ':' TYPEID ASSIGN expr
   15        | . error

    error     shift, and go to state 16
    OBJECTID  shift, and go to state 17

    error     [reduce using rule 8 (feature_list)]
    OBJECTID  [reduce using rule 8 (feature_list)]
    '}'       reduce using rule 8 (feature_list)

    feature_list  go to state 27
    feature       go to state 19


State 21

   12 feature: OBJECTID '(' . formal_list ')' ':' TYPEID '{' expr '}'
   16 formal_list: . %empty
   17            | . formal
   18            | . formal_list ',' formal
   19            | . formal_list ',' error
   20 formal: . OBJECTID ':' TYPEID

    OBJECTID  shift, and go to state 28

    $default  reduce using rule 16 (formal_list)

    formal_list  go to state 29
    formal       go to state 30


State 22

   13 feature: OBJECTID ':' . TYPEID
   14        | OBJECTID ':' . TYPEID ASSIGN expr

    TYPEID  shift, and go to state 31


State 23

   11 feature_list: feature_list error . ';'
   15 feature: error .

    ';'  shift, and go to state 32

    ';'  [reduce using rule 15 (feature)]


State 24

    5 class: CLASS TYPEID '{' feature_list '}' .

    $default  reduce using rule 5 (class)


State 25

   10 feature_list: feature_list feature . ';'

    ';'  shift, and go to state 33


State 26

    9 feature_list: feature ';' .

    $default  reduce using rule 9 (feature_list)


State 27

    6 class: CLASS TYPEID INHERITS TYPEID '{' feature_list . '}'
   10 feature_list: feature_list . feature ';'
   11             | feature_list . error ';'
   12 feature: . OBJECTID '(' formal_list ')' ':' TYPEID '{' expr '}'
   13        | . OBJECTID ':' TYPEID
   14        | . OBJECTID ':' TYPEID ASSIGN expr
   15        | . error

    error     shift, and go to state 23
    OBJECTID  shift, and go to state 17
    '}'       shift, and go to state 34

    feature  go to state 25


State 28

   20 formal: OBJECTID . ':' TYPEID

    ':'  shift, and go to state 35


State 29

   12 feature: OBJECTID '(' formal_list . ')' ':' TYPEID '{' expr '}'
   18 formal_list: formal_list . ',' formal
   19            | formal_list . ',' error

    ')'  shift, and go to state 36
    ','  shift, and go to state 37


State 30

   17 formal_list: formal .

    $default  reduce using rule 17 (formal_list)


State 31

   13 feature: OBJECTID ':' TYPEID .
   14        | OBJECTID ':' TYPEID . ASSIGN expr

    ASSIGN  shift, and go to state 38

    $default  reduce using rule 13 (feature)


State 32

   11 feature_list: feature_list error ';' .

    $default  reduce using rule 11 (feature_list)


State 33

   10 feature_list: feature_list feature ';' .

    $default  reduce using rule 10 (feature_list)


State 34

    6 class: CLASS TYPEID INHERITS TYPEID '{' feature_list '}' .

    $default  reduce using rule 6 (class)


State 35

   20 formal: OBJECTID ':' . TYPEID

    TYPEID  shift, and go to state 39


State 36

   12 feature: OBJECTID '(' formal_list ')' . ':' TYPEID '{' expr '}'

    ':'  shift, and go to state 40


State 37

   18 formal_list: formal_list ',' . formal
   19            | formal_list ',' . error
   20 formal: . OBJECTID ':' TYPEID

    error     shift, and go to state 41
    OBJECTID  shift, and go to state 28

    formal  go to state 42


State 38

   14 feature: OBJECTID ':' TYPEID ASSIGN . expr
   28 expr: . OBJECTID ASSIGN expr
   29     | . expr '.' OBJECTID '(' expr_list_comma_sep ')'
   30     | . expr '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   31     | . OBJECTID '(' expr_list_comma_sep ')'
   32     | . IF expr THEN expr ELSE expr FI
   33     | . WHILE expr LOOP expr POOL
   34     | . '{' expr_list_semicolon_sep '}'
   35     | . LET expr_let_body
   36     | . CASE expr OF case_branch_list ESAC
   37     | . NEW TYPEID
   38     | . ISVOID expr
   39     | . expr '+' expr
   40     | . expr '-' expr
   41     | . expr '*' expr
   42     | . expr '/' expr
   43     | . '~' expr
   44     | . expr '<' expr
   45     | . expr LE expr
   46     | . expr '=' expr
   47     | . NOT expr
   48     | . '(' expr ')'
   49     | . OBJECTID
   50     | . INT_CONST
   51     | . STR_CONST
   52     | . BOOL_CONST

    IF          shift, and go to state 43
    LET         shift, and go to state 44
    WHILE       shift, and go to state 45
    CASE        shift, and go to state 46
    NEW         shift, and go to state 47
    ISVOID      shift, and go to state 48
    STR_CONST   shift, and go to state 49
    INT_CONST   shift, and go to state 50
    BOOL_CONST  shift, and go to state 51
    OBJECTID    shift, and go to state 52
    NOT         shift, and go to state 53
    '~'         shift, and go to state 54
    '{'         shift, and go to state 55
    '('         shift, and go to state 56

    expr  go to state 57


State 39

   20 formal: OBJECTID ':' TYPEID .

    $default  reduce using rule 20 (formal)


State 40

   12 feature: OBJECTID '(' formal_list ')' ':' . TYPEID '{' expr '}'

    TYPEID  shift, and go to state 58


State 41

   19 formal_list: formal_list ',' error .

    $default  reduce using rule 19 (formal_list)


State 42

   18 formal_list: formal_list ',' formal .

    $default  reduce using rule 18 (formal_list)


State 43

   28 expr: . OBJECTID ASSIGN expr
   29     | . expr '.' OBJECTID '(' expr_list_comma_sep ')'
   30     | . expr '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   31     | . OBJECTID '(' expr_list_comma_sep ')'
   32     | . IF expr THEN expr ELSE expr FI
   32     | IF . expr THEN expr ELSE expr FI
   33     | . WHILE expr LOOP expr POOL
   34     | . '{' expr_list_semicolon_sep '}'
   35     | . LET expr_let_body
   36     | . CASE expr OF case_branch_list ESAC
   37     | . NEW TYPEID
   38     | . ISVOID expr
   39     | . expr '+' expr
   40     | . expr '-' expr
   41     | . expr '*' expr
   42     | . expr '/' expr
   43     | . '~' expr
   44     | . expr '<' expr
   45     | . expr LE expr
   46     | . expr '=' expr
   47     | . NOT expr
   48     | . '(' expr ')'
   49     | . OBJECTID
   50     | . INT_CONST
   51     | . STR_CONST
   52     | . BOOL_CONST

    IF          shift, and go to state 43
    LET         shift, and go to state 44
    WHILE       shift, and go to state 45
    CASE        shift, and go to state 46
    NEW         shift, and go to state 47
    ISVOID      shift, and go to state 48
    STR_CONST   shift, and go to state 49
    INT_CONST   shift, and go to state 50
    BOOL_CONST  shift, and go to state 51
    OBJECTID    shift, and go to state 52
    NOT         shift, and go to state 53
    '~'         shift, and go to state 54
    '{'         shift, and go to state 55
    '('         shift, and go to state 56

    expr  go to state 59


State 44

   35 expr: LET . expr_let_body
   53 expr_let_body: . OBJECTID ':' TYPEID IN expr
   54              | . OBJECTID ':' TYPEID ASSIGN expr IN expr
   55              | . OBJECTID ':' TYPEID ',' expr_let_body
   56              | . OBJECTID ':' TYPEID ASSIGN expr ',' expr_let_body
   57              | . error ',' expr_let_body

    error     shift, and go to state 60
    OBJECTID  shift, and go to state 61

    expr_let_body  go to state 62


State 45

   28 expr: . OBJECTID ASSIGN expr
   29     | . expr '.' OBJECTID '(' expr_list_comma_sep ')'
   30     | . expr '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   31     | . OBJECTID '(' expr_list_comma_sep ')'
   32     | . IF expr THEN expr ELSE expr FI
   33     | . WHILE expr LOOP expr POOL
   33     | WHILE . expr LOOP expr POOL
   34     | . '{' expr_list_semicolon_sep '}'
   35     | . LET expr_let_body
   36     | . CASE expr OF case_branch_list ESAC
   37     | . NEW TYPEID
   38     | . ISVOID expr
   39     | . expr '+' expr
   40     | . expr '-' expr
   41     | . expr '*' expr
   42     | . expr '/' expr
   43     | . '~' expr
   44     | . expr '<' expr
   45     | . expr LE expr
   46     | . expr '=' expr
   47     | . NOT expr
   48     | . '(' expr ')'
   49     | . OBJECTID
   50     | . INT_CONST
   51     | . STR_CONST
   52     | . BOOL_CONST

    IF          shift, and go to state 43
    LET         shift, and go to state 44
    WHILE       shift, and go to state 45
    CASE        shift, and go to state 46
    NEW         shift, and go to state 47
    ISVOID      shift, and go to state 48
    STR_CONST   shift, and go to state 49
    INT_CONST   shift, and go to state 50
    BOOL_CONST  shift, and go to state 51
    OBJECTID    shift, and go to state 52
    NOT         shift, and go to state 53
    '~'         shift, and go to state 54
    '{'         shift, and go to state 55
    '('         shift, and go to state 56

    expr  go to state 63


State 46

   28 expr: . OBJECTID ASSIGN expr
   29     | . expr '.' OBJECTID '(' expr_list_comma_sep ')'
   30     | . expr '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   31     | . OBJECTID '(' expr_list_comma_sep ')'
   32     | . IF expr THEN expr ELSE expr FI
   33     | . WHILE expr LOOP expr POOL
   34     | . '{' expr_list_semicolon_sep '}'
   35     | . LET expr_let_body
   36     | . CASE expr OF case_branch_list ESAC
   36     | CASE . expr OF case_branch_list ESAC
   37     | . NEW TYPEID
   38     | . ISVOID expr
   39     | . expr '+' expr
   40     | . expr '-' expr
   41     | . expr '*' expr
   42     | . expr '/' expr
   43     | . '~' expr
   44     | . expr '<' expr
   45     | . expr LE expr
   46     | . expr '=' expr
   47     | . NOT expr
   48     | . '(' expr ')'
   49     | . OBJECTID
   50     | . INT_CONST
   51     | . STR_CONST
   52     | . BOOL_CONST

    IF          shift, and go to state 43
    LET         shift, and go to state 44
    WHILE       shift, and go to state 45
    CASE        shift, and go to state 46
    NEW         shift, and go to state 47
    ISVOID      shift, and go to state 48
    STR_CONST   shift, and go to state 49
    INT_CONST   shift, and go to state 50
    BOOL_CONST  shift, and go to state 51
    OBJECTID    shift, and go to state 52
    NOT         shift, and go to state 53
    '~'         shift, and go to state 54
    '{'         shift, and go to state 55
    '('         shift, and go to state 56

    expr  go to state 64


State 47

   37 expr: NEW . TYPEID

    TYPEID  shift, and go to state 65


State 48

   28 expr: . OBJECTID ASSIGN expr
   29     | . expr '.' OBJECTID '(' expr_list_comma_sep ')'
   30     | . expr '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   31     | . OBJECTID '(' expr_list_comma_sep ')'
   32     | . IF expr THEN expr ELSE expr FI
   33     | . WHILE expr LOOP expr POOL
   34     | . '{' expr_list_semicolon_sep '}'
   35     | . LET expr_let_body
   36     | . CASE expr OF case_branch_list ESAC
   37     | . NEW TYPEID
   38     | . ISVOID expr
   38     | ISVOID . expr
   39     | . expr '+' expr
   40     | . expr '-' expr
   41     | . expr '*' expr
   42     | . expr '/' expr
   43     | . '~' expr
   44     | . expr '<' expr
   45     | . expr LE expr
   46     | . expr '=' expr
   47     | . NOT expr
   48     | . '(' expr ')'
   49     | . OBJECTID
   50     | . INT_CONST
   51     | . STR_CONST
   52     | . BOOL_CONST

    IF          shift, and go to state 43
    LET         shift, and go to state 44
    WHILE       shift, and go to state 45
    CASE        shift, and go to state 46
    NEW         shift, and go to state 47
    ISVOID      shift, and go to state 48
    STR_CONST   shift, and go to state 49
    INT_CONST   shift, and go to state 50
    BOOL_CONST  shift, and go to state 51
    OBJECTID    shift, and go to state 52
    NOT         shift, and go to state 53
    '~'         shift, and go to state 54
    '{'         shift, and go to state 55
    '('         shift, and go to state 56

    expr  go to state 66


State 49

   51 expr: STR_CONST .

    $default  reduce using rule 51 (expr)


State 50

   50 expr: INT_CONST .

    $default  reduce using rule 50 (expr)


State 51

   52 expr: BOOL_CONST .

    $default  reduce using rule 52 (expr)


State 52

   28 expr: OBJECTID . ASSIGN expr
   31     | OBJECTID . '(' expr_list_comma_sep ')'
   49     | OBJECTID .

    ASSIGN  shift, and go to state 67
    '('     shift, and go to state 68

    $default  reduce using rule 49 (expr)


State 53

   28 expr: . OBJECTID ASSIGN expr
   29     | . expr '.' OBJECTID '(' expr_list_comma_sep ')'
   30     | . expr '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   31     | . OBJECTID '(' expr_list_comma_sep ')'
   32     | . IF expr THEN expr ELSE expr FI
   33     | . WHILE expr LOOP expr POOL
   34     | . '{' expr_list_semicolon_sep '}'
   35     | . LET expr_let_body
   36     | . CASE expr OF case_branch_list ESAC
   37     | . NEW TYPEID
   38     | . ISVOID expr
   39     | . expr '+' expr
   40     | . expr '-' expr
   41     | . expr '*' expr
   42     | . expr '/' expr
   43     | . '~' expr
   44     | . expr '<' expr
   45     | . expr LE expr
   46     | . expr '=' expr
   47     | . NOT expr
   47     | NOT . expr
   48     | . '(' expr ')'
   49     | . OBJECTID
   50     | . INT_CONST
   51     | . STR_CONST
   52     | . BOOL_CONST

    IF          shift, and go to state 43
    LET         shift, and go to state 44
    WHILE       shift, and go to state 45
    CASE        shift, and go to state 46
    NEW         shift, and go to state 47
    ISVOID      shift, and go to state 48
    STR_CONST   shift, and go to state 49
    INT_CONST   shift, and go to state 50
    BOOL_CONST  shift, and go to state 51
    OBJECTID    shift, and go to state 52
    NOT         shift, and go to state 53
    '~'         shift, and go to state 54
    '{'         shift, and go to state 55
    '('         shift, and go to state 56

    expr  go to state 69


State 54

   28 expr: . OBJECTID ASSIGN expr
   29     | . expr '.' OBJECTID '(' expr_list_comma_sep ')'
   30     | . expr '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   31     | . OBJECTID '(' expr_list_comma_sep ')'
   32     | . IF expr THEN expr ELSE expr FI
   33     | . WHILE expr LOOP expr POOL
   34     | . '{' expr_list_semicolon_sep '}'
   35     | . LET expr_let_body
   36     | . CASE expr OF case_branch_list ESAC
   37     | . NEW TYPEID
   38     | . ISVOID expr
   39     | . expr '+' expr
   40     | . expr '-' expr
   41     | . expr '*' expr
   42     | . expr '/' expr
   43     | . '~' expr
   43     | '~' . expr
   44     | . expr '<' expr
   45     | . expr LE expr
   46     | . expr '=' expr
   47     | . NOT expr
   48     | . '(' expr ')'
   49     | . OBJECTID
   50     | . INT_CONST
   51     | . STR_CONST
   52     | . BOOL_CONST

    IF          shift, and go to state 43
    LET         shift, and go to state 44
    WHILE       shift, and go to state 45
    CASE        shift, and go to state 46
    NEW         shift, and go to state 47
    ISVOID      shift, and go to state 48
    STR_CONST   shift, and go to state 49
    INT_CONST   shift, and go to state 50
    BOOL_CONST  shift, and go to state 51
    OBJECTID    shift, and go to state 52
    NOT         shift, and go to state 53
    '~'         shift, and go to state 54
    '{'         shift, and go to state 55
    '('         shift, and go to state 56

    expr  go to state 70


State 55

   25 expr_list_semicolon_sep: . expr ';'
   26                        | . expr_list_semicolon_sep expr ';'
   27                        | . error ';'
   28 expr: . OBJECTID ASSIGN expr
   29     | . expr '.' OBJECTID '(' expr_list_comma_sep ')'
   30     | . expr '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   31     | . OBJECTID '(' expr_list_comma_sep ')'
   32     | . IF expr THEN expr ELSE expr FI
   33     | . WHILE expr LOOP expr POOL
   34     | . '{' expr_list_semicolon_sep '}'
   34     | '{' . expr_list_semicolon_sep '}'
   35     | . LET expr_let_body
   36     | . CASE expr OF case_branch_list ESAC
   37     | . NEW TYPEID
   38     | . ISVOID expr
   39     | . expr '+' expr
   40     | . expr '-' expr
   41     | . expr '*' expr
   42     | . expr '/' expr
   43     | . '~' expr
   44     | . expr '<' expr
   45     | . expr LE expr
   46     | . expr '=' expr
   47     | . NOT expr
   48     | . '(' expr ')'
   49     | . OBJECTID
   50     | . INT_CONST
   51     | . STR_CONST
   52     | . BOOL_CONST

    error       shift, and go to state 71
    IF          shift, and go to state 43
    LET         shift, and go to state 44
    WHILE       shift, and go to state 45
    CASE        shift, and go to state 46
    NEW         shift, and go to state 47
    ISVOID      shift, and go to state 48
    STR_CONST   shift, and go to state 49
    INT_CONST   shift, and go to state 50
    BOOL_CONST  shift, and go to state 51
    OBJECTID    shift, and go to state 52
    NOT         shift, and go to state 53
    '~'         shift, and go to state 54
    '{'         shift, and go to state 55
    '('         shift, and go to state 56

    expr_list_semicolon_sep  go to state 72
    expr                     go to state 73


State 56

   28 expr: . OBJECTID ASSIGN expr
   29     | . expr '.' OBJECTID '(' expr_list_comma_sep ')'
   30     | . expr '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   31     | . OBJECTID '(' expr_list_comma_sep ')'
   32     | . IF expr THEN expr ELSE expr FI
   33     | . WHILE expr LOOP expr POOL
   34     | . '{' expr_list_semicolon_sep '}'
   35     | . LET expr_let_body
   36     | . CASE expr OF case_branch_list ESAC
   37     | . NEW TYPEID
   38     | . ISVOID expr
   39     | . expr '+' expr
   40     | . expr '-' expr
   41     | . expr '*' expr
   42     | . expr '/' expr
   43     | . '~' expr
   44     | . expr '<' expr
   45     | . expr LE expr
   46     | . expr '=' expr
   47     | . NOT expr
   48     | . '(' expr ')'
   48     | '(' . expr ')'
   49     | . OBJECTID
   50     | . INT_CONST
   51     | . STR_CONST
   52     | . BOOL_CONST

    IF          shift, and go to state 43
    LET         shift, and go to state 44
    WHILE       shift, and go to state 45
    CASE        shift, and go to state 46
    NEW         shift, and go to state 47
    ISVOID      shift, and go to state 48
    STR_CONST   shift, and go to state 49
    INT_CONST   shift, and go to state 50
    BOOL_CONST  shift, and go to state 51
    OBJECTID    shift, and go to state 52
    NOT         shift, and go to state 53
    '~'         shift, and go to state 54
    '{'         shift, and go to state 55
    '('         shift, and go to state 56

    expr  go to state 74


State 57

   14 feature: OBJECTID ':' TYPEID ASSIGN expr .
   29 expr: expr . '.' OBJECTID '(' expr_list_comma_sep ')'
   30     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   39     | expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   44     | expr . '<' expr
   45     | expr . LE expr
   46     | expr . '=' expr

    LE   shift, and go to state 75
    '<'  shift, and go to state 76
    '='  shift, and go to state 77
    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    '*'  shift, and go to state 80
    '/'  shift, and go to state 81
    '.'  shift, and go to state 82
    '@'  shift, and go to state 83

    $default  reduce using rule 14 (feature)


State 58

   12 feature: OBJECTID '(' formal_list ')' ':' TYPEID . '{' expr '}'

    '{'  shift, and go to state 84


State 59

   29 expr: expr . '.' OBJECTID '(' expr_list_comma_sep ')'
   30     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   32     | IF expr . THEN expr ELSE expr FI
   39     | expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   44     | expr . '<' expr
   45     | expr . LE expr
   46     | expr . '=' expr

    THEN  shift, and go to state 85
    LE    shift, and go to state 75
    '<'   shift, and go to state 76
    '='   shift, and go to state 77
    '+'   shift, and go to state 78
    '-'   shift, and go to state 79
    '*'   shift, and go to state 80
    '/'   shift, and go to state 81
    '.'   shift, and go to state 82
    '@'   shift, and go to state 83


State 60

   57 expr_let_body: error . ',' expr_let_body

    ','  shift, and go to state 86


State 61

   53 expr_let_body: OBJECTID . ':' TYPEID IN expr
   54              | OBJECTID . ':' TYPEID ASSIGN expr IN expr
   55              | OBJECTID . ':' TYPEID ',' expr_let_body
   56              | OBJECTID . ':' TYPEID ASSIGN expr ',' expr_let_body

    ':'  shift, and go to state 87


State 62

   35 expr: LET expr_let_body .

    $default  reduce using rule 35 (expr)


State 63

   29 expr: expr . '.' OBJECTID '(' expr_list_comma_sep ')'
   30     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   33     | WHILE expr . LOOP expr POOL
   39     | expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   44     | expr . '<' expr
   45     | expr . LE expr
   46     | expr . '=' expr

    LOOP  shift, and go to state 88
    LE    shift, and go to state 75
    '<'   shift, and go to state 76
    '='   shift, and go to state 77
    '+'   shift, and go to state 78
    '-'   shift, and go to state 79
    '*'   shift, and go to state 80
    '/'   shift, and go to state 81
    '.'   shift, and go to state 82
    '@'   shift, and go to state 83


State 64

   29 expr: expr . '.' OBJECTID '(' expr_list_comma_sep ')'
   30     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   36     | CASE expr . OF case_branch_list ESAC
   39     | expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   44     | expr . '<' expr
   45     | expr . LE expr
   46     | expr . '=' expr

    OF   shift, and go to state 89
    LE   shift, and go to state 75
    '<'  shift, and go to state 76
    '='  shift, and go to state 77
    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    '*'  shift, and go to state 80
    '/'  shift, and go to state 81
    '.'  shift, and go to state 82
    '@'  shift, and go to state 83


State 65

   37 expr: NEW TYPEID .

    $default  reduce using rule 37 (expr)


State 66

   29 expr: expr . '.' OBJECTID '(' expr_list_comma_sep ')'
   30     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   38     | ISVOID expr .
   39     | expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   44     | expr . '<' expr
   45     | expr . LE expr
   46     | expr . '=' expr

    '.'  shift, and go to state 82
    '@'  shift, and go to state 83

    '@'       [reduce using rule 38 (expr)]
    $default  reduce using rule 38 (expr)


State 67

   28 expr: . OBJECTID ASSIGN expr
   28     | OBJECTID ASSIGN . expr
   29     | . expr '.' OBJECTID '(' expr_list_comma_sep ')'
   30     | . expr '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   31     | . OBJECTID '(' expr_list_comma_sep ')'
   32     | . IF expr THEN expr ELSE expr FI
   33     | . WHILE expr LOOP expr POOL
   34     | . '{' expr_list_semicolon_sep '}'
   35     | . LET expr_let_body
   36     | . CASE expr OF case_branch_list ESAC
   37     | . NEW TYPEID
   38     | . ISVOID expr
   39     | . expr '+' expr
   40     | . expr '-' expr
   41     | . expr '*' expr
   42     | . expr '/' expr
   43     | . '~' expr
   44     | . expr '<' expr
   45     | . expr LE expr
   46     | . expr '=' expr
   47     | . NOT expr
   48     | . '(' expr ')'
   49     | . OBJECTID
   50     | . INT_CONST
   51     | . STR_CONST
   52     | . BOOL_CONST

    IF          shift, and go to state 43
    LET         shift, and go to state 44
    WHILE       shift, and go to state 45
    CASE        shift, and go to state 46
    NEW         shift, and go to state 47
    ISVOID      shift, and go to state 48
    STR_CONST   shift, and go to state 49
    INT_CONST   shift, and go to state 50
    BOOL_CONST  shift, and go to state 51
    OBJECTID    shift, and go to state 52
    NOT         shift, and go to state 53
    '~'         shift, and go to state 54
    '{'         shift, and go to state 55
    '('         shift, and go to state 56

    expr  go to state 90


State 68

   21 expr_list_comma_sep: . %empty
   22                    | . expr
   23                    | . expr_list_comma_sep ',' expr
   24                    | . expr_list_comma_sep ',' error
   28 expr: . OBJECTID ASSIGN expr
   29     | . expr '.' OBJECTID '(' expr_list_comma_sep ')'
   30     | . expr '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   31     | . OBJECTID '(' expr_list_comma_sep ')'
   31     | OBJECTID '(' . expr_list_comma_sep ')'
   32     | . IF expr THEN expr ELSE expr FI
   33     | . WHILE expr LOOP expr POOL
   34     | . '{' expr_list_semicolon_sep '}'
   35     | . LET expr_let_body
   36     | . CASE expr OF case_branch_list ESAC
   37     | . NEW TYPEID
   38     | . ISVOID expr
   39     | . expr '+' expr
   40     | . expr '-' expr
   41     | . expr '*' expr
   42     | . expr '/' expr
   43     | . '~' expr
   44     | . expr '<' expr
   45     | . expr LE expr
   46     | . expr '=' expr
   47     | . NOT expr
   48     | . '(' expr ')'
   49     | . OBJECTID
   50     | . INT_CONST
   51     | . STR_CONST
   52     | . BOOL_CONST

    IF          shift, and go to state 43
    LET         shift, and go to state 44
    WHILE       shift, and go to state 45
    CASE        shift, and go to state 46
    NEW         shift, and go to state 47
    ISVOID      shift, and go to state 48
    STR_CONST   shift, and go to state 49
    INT_CONST   shift, and go to state 50
    BOOL_CONST  shift, and go to state 51
    OBJECTID    shift, and go to state 52
    NOT         shift, and go to state 53
    '~'         shift, and go to state 54
    '{'         shift, and go to state 55
    '('         shift, and go to state 56

    $default  reduce using rule 21 (expr_list_comma_sep)

    expr_list_comma_sep  go to state 91
    expr                 go to state 92


State 69

   29 expr: expr . '.' OBJECTID '(' expr_list_comma_sep ')'
   30     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   39     | expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   44     | expr . '<' expr
   45     | expr . LE expr
   46     | expr . '=' expr
   47     | NOT expr .

    LE   shift, and go to state 75
    '<'  shift, and go to state 76
    '='  shift, and go to state 77
    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    '*'  shift, and go to state 80
    '/'  shift, and go to state 81
    '.'  shift, and go to state 82
    '@'  shift, and go to state 83

    '@'       [reduce using rule 47 (expr)]
    $default  reduce using rule 47 (expr)


State 70

   29 expr: expr . '.' OBJECTID '(' expr_list_comma_sep ')'
   30     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   39     | expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | '~' expr .
   44     | expr . '<' expr
   45     | expr . LE expr
   46     | expr . '=' expr

    '.'  shift, and go to state 82
    '@'  shift, and go to state 83

    '@'       [reduce using rule 43 (expr)]
    $default  reduce using rule 43 (expr)


State 71

   27 expr_list_semicolon_sep: error . ';'

    ';'  shift, and go to state 93


State 72

   26 expr_list_semicolon_sep: expr_list_semicolon_sep . expr ';'
   28 expr: . OBJECTID ASSIGN expr
   29     | . expr '.' OBJECTID '(' expr_list_comma_sep ')'
   30     | . expr '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   31     | . OBJECTID '(' expr_list_comma_sep ')'
   32     | . IF expr THEN expr ELSE expr FI
   33     | . WHILE expr LOOP expr POOL
   34     | . '{' expr_list_semicolon_sep '}'
   34     | '{' expr_list_semicolon_sep . '}'
   35     | . LET expr_let_body
   36     | . CASE expr OF case_branch_list ESAC
   37     | . NEW TYPEID
   38     | . ISVOID expr
   39     | . expr '+' expr
   40     | . expr '-' expr
   41     | . expr '*' expr
   42     | . expr '/' expr
   43     | . '~' expr
   44     | . expr '<' expr
   45     | . expr LE expr
   46     | . expr '=' expr
   47     | . NOT expr
   48     | . '(' expr ')'
   49     | . OBJECTID
   50     | . INT_CONST
   51     | . STR_CONST
   52     | . BOOL_CONST

    IF          shift, and go to state 43
    LET         shift, and go to state 44
    WHILE       shift, and go to state 45
    CASE        shift, and go to state 46
    NEW         shift, and go to state 47
    ISVOID      shift, and go to state 48
    STR_CONST   shift, and go to state 49
    INT_CONST   shift, and go to state 50
    BOOL_CONST  shift, and go to state 51
    OBJECTID    shift, and go to state 52
    NOT         shift, and go to state 53
    '~'         shift, and go to state 54
    '{'         shift, and go to state 55
    '}'         shift, and go to state 94
    '('         shift, and go to state 56

    expr  go to state 95


State 73

   25 expr_list_semicolon_sep: expr . ';'
   29 expr: expr . '.' OBJECTID '(' expr_list_comma_sep ')'
   30     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   39     | expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   44     | expr . '<' expr
   45     | expr . LE expr
   46     | expr . '=' expr

    LE   shift, and go to state 75
    '<'  shift, and go to state 76
    '='  shift, and go to state 77
    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    '*'  shift, and go to state 80
    '/'  shift, and go to state 81
    '.'  shift, and go to state 82
    ';'  shift, and go to state 96
    '@'  shift, and go to state 83


State 74

   29 expr: expr . '.' OBJECTID '(' expr_list_comma_sep ')'
   30     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   39     | expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   44     | expr . '<' expr
   45     | expr . LE expr
   46     | expr . '=' expr
   48     | '(' expr . ')'

    LE   shift, and go to state 75
    '<'  shift, and go to state 76
    '='  shift, and go to state 77
    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    '*'  shift, and go to state 80
    '/'  shift, and go to state 81
    '.'  shift, and go to state 82
    ')'  shift, and go to state 97
    '@'  shift, and go to state 83


State 75

   28 expr: . OBJECTID ASSIGN expr
   29     | . expr '.' OBJECTID '(' expr_list_comma_sep ')'
   30     | . expr '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   31     | . OBJECTID '(' expr_list_comma_sep ')'
   32     | . IF expr THEN expr ELSE expr FI
   33     | . WHILE expr LOOP expr POOL
   34     | . '{' expr_list_semicolon_sep '}'
   35     | . LET expr_let_body
   36     | . CASE expr OF case_branch_list ESAC
   37     | . NEW TYPEID
   38     | . ISVOID expr
   39     | . expr '+' expr
   40     | . expr '-' expr
   41     | . expr '*' expr
   42     | . expr '/' expr
   43     | . '~' expr
   44     | . expr '<' expr
   45     | . expr LE expr
   45     | expr LE . expr
   46     | . expr '=' expr
   47     | . NOT expr
   48     | . '(' expr ')'
   49     | . OBJECTID
   50     | . INT_CONST
   51     | . STR_CONST
   52     | . BOOL_CONST

    IF          shift, and go to state 43
    LET         shift, and go to state 44
    WHILE       shift, and go to state 45
    CASE        shift, and go to state 46
    NEW         shift, and go to state 47
    ISVOID      shift, and go to state 48
    STR_CONST   shift, and go to state 49
    INT_CONST   shift, and go to state 50
    BOOL_CONST  shift, and go to state 51
    OBJECTID    shift, and go to state 52
    NOT         shift, and go to state 53
    '~'         shift, and go to state 54
    '{'         shift, and go to state 55
    '('         shift, and go to state 56

    expr  go to state 98


State 76

   28 expr: . OBJECTID ASSIGN expr
   29     | . expr '.' OBJECTID '(' expr_list_comma_sep ')'
   30     | . expr '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   31     | . OBJECTID '(' expr_list_comma_sep ')'
   32     | . IF expr THEN expr ELSE expr FI
   33     | . WHILE expr LOOP expr POOL
   34     | . '{' expr_list_semicolon_sep '}'
   35     | . LET expr_let_body
   36     | . CASE expr OF case_branch_list ESAC
   37     | . NEW TYPEID
   38     | . ISVOID expr
   39     | . expr '+' expr
   40     | . expr '-' expr
   41     | . expr '*' expr
   42     | . expr '/' expr
   43     | . '~' expr
   44     | . expr '<' expr
   44     | expr '<' . expr
   45     | . expr LE expr
   46     | . expr '=' expr
   47     | . NOT expr
   48     | . '(' expr ')'
   49     | . OBJECTID
   50     | . INT_CONST
   51     | . STR_CONST
   52     | . BOOL_CONST

    IF          shift, and go to state 43
    LET         shift, and go to state 44
    WHILE       shift, and go to state 45
    CASE        shift, and go to state 46
    NEW         shift, and go to state 47
    ISVOID      shift, and go to state 48
    STR_CONST   shift, and go to state 49
    INT_CONST   shift, and go to state 50
    BOOL_CONST  shift, and go to state 51
    OBJECTID    shift, and go to state 52
    NOT         shift, and go to state 53
    '~'         shift, and go to state 54
    '{'         shift, and go to state 55
    '('         shift, and go to state 56

    expr  go to state 99


State 77

   28 expr: . OBJECTID ASSIGN expr
   29     | . expr '.' OBJECTID '(' expr_list_comma_sep ')'
   30     | . expr '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   31     | . OBJECTID '(' expr_list_comma_sep ')'
   32     | . IF expr THEN expr ELSE expr FI
   33     | . WHILE expr LOOP expr POOL
   34     | . '{' expr_list_semicolon_sep '}'
   35     | . LET expr_let_body
   36     | . CASE expr OF case_branch_list ESAC
   37     | . NEW TYPEID
   38     | . ISVOID expr
   39     | . expr '+' expr
   40     | . expr '-' expr
   41     | . expr '*' expr
   42     | . expr '/' expr
   43     | . '~' expr
   44     | . expr '<' expr
   45     | . expr LE expr
   46     | . expr '=' expr
   46     | expr '=' . expr
   47     | . NOT expr
   48     | . '(' expr ')'
   49     | . OBJECTID
   50     | . INT_CONST
   51     | . STR_CONST
   52     | . BOOL_CONST

    IF          shift, and go to state 43
    LET         shift, and go to state 44
    WHILE       shift, and go to state 45
    CASE        shift, and go to state 46
    NEW         shift, and go to state 47
    ISVOID      shift, and go to state 48
    STR_CONST   shift, and go to state 49
    INT_CONST   shift, and go to state 50
    BOOL_CONST  shift, and go to state 51
    OBJECTID    shift, and go to state 52
    NOT         shift, and go to state 53
    '~'         shift, and go to state 54
    '{'         shift, and go to state 55
    '('         shift, and go to state 56

    expr  go to state 100


State 78

   28 expr: . OBJECTID ASSIGN expr
   29     | . expr '.' OBJECTID '(' expr_list_comma_sep ')'
   30     | . expr '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   31     | . OBJECTID '(' expr_list_comma_sep ')'
   32     | . IF expr THEN expr ELSE expr FI
   33     | . WHILE expr LOOP expr POOL
   34     | . '{' expr_list_semicolon_sep '}'
   35     | . LET expr_let_body
   36     | . CASE expr OF case_branch_list ESAC
   37     | . NEW TYPEID
   38     | . ISVOID expr
   39     | . expr '+' expr
   39     | expr '+' . expr
   40     | . expr '-' expr
   41     | . expr '*' expr
   42     | . expr '/' expr
   43     | . '~' expr
   44     | . expr '<' expr
   45     | . expr LE expr
   46     | . expr '=' expr
   47     | . NOT expr
   48     | . '(' expr ')'
   49     | . OBJECTID
   50     | . INT_CONST
   51     | . STR_CONST
   52     | . BOOL_CONST

    IF          shift, and go to state 43
    LET         shift, and go to state 44
    WHILE       shift, and go to state 45
    CASE        shift, and go to state 46
    NEW         shift, and go to state 47
    ISVOID      shift, and go to state 48
    STR_CONST   shift, and go to state 49
    INT_CONST   shift, and go to state 50
    BOOL_CONST  shift, and go to state 51
    OBJECTID    shift, and go to state 52
    NOT         shift, and go to state 53
    '~'         shift, and go to state 54
    '{'         shift, and go to state 55
    '('         shift, and go to state 56

    expr  go to state 101


State 79

   28 expr: . OBJECTID ASSIGN expr
   29     | . expr '.' OBJECTID '(' expr_list_comma_sep ')'
   30     | . expr '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   31     | . OBJECTID '(' expr_list_comma_sep ')'
   32     | . IF expr THEN expr ELSE expr FI
   33     | . WHILE expr LOOP expr POOL
   34     | . '{' expr_list_semicolon_sep '}'
   35     | . LET expr_let_body
   36     | . CASE expr OF case_branch_list ESAC
   37     | . NEW TYPEID
   38     | . ISVOID expr
   39     | . expr '+' expr
   40     | . expr '-' expr
   40     | expr '-' . expr
   41     | . expr '*' expr
   42     | . expr '/' expr
   43     | . '~' expr
   44     | . expr '<' expr
   45     | . expr LE expr
   46     | . expr '=' expr
   47     | . NOT expr
   48     | . '(' expr ')'
   49     | . OBJECTID
   50     | . INT_CONST
   51     | . STR_CONST
   52     | . BOOL_CONST

    IF          shift, and go to state 43
    LET         shift, and go to state 44
    WHILE       shift, and go to state 45
    CASE        shift, and go to state 46
    NEW         shift, and go to state 47
    ISVOID      shift, and go to state 48
    STR_CONST   shift, and go to state 49
    INT_CONST   shift, and go to state 50
    BOOL_CONST  shift, and go to state 51
    OBJECTID    shift, and go to state 52
    NOT         shift, and go to state 53
    '~'         shift, and go to state 54
    '{'         shift, and go to state 55
    '('         shift, and go to state 56

    expr  go to state 102


State 80

   28 expr: . OBJECTID ASSIGN expr
   29     | . expr '.' OBJECTID '(' expr_list_comma_sep ')'
   30     | . expr '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   31     | . OBJECTID '(' expr_list_comma_sep ')'
   32     | . IF expr THEN expr ELSE expr FI
   33     | . WHILE expr LOOP expr POOL
   34     | . '{' expr_list_semicolon_sep '}'
   35     | . LET expr_let_body
   36     | . CASE expr OF case_branch_list ESAC
   37     | . NEW TYPEID
   38     | . ISVOID expr
   39     | . expr '+' expr
   40     | . expr '-' expr
   41     | . expr '*' expr
   41     | expr '*' . expr
   42     | . expr '/' expr
   43     | . '~' expr
   44     | . expr '<' expr
   45     | . expr LE expr
   46     | . expr '=' expr
   47     | . NOT expr
   48     | . '(' expr ')'
   49     | . OBJECTID
   50     | . INT_CONST
   51     | . STR_CONST
   52     | . BOOL_CONST

    IF          shift, and go to state 43
    LET         shift, and go to state 44
    WHILE       shift, and go to state 45
    CASE        shift, and go to state 46
    NEW         shift, and go to state 47
    ISVOID      shift, and go to state 48
    STR_CONST   shift, and go to state 49
    INT_CONST   shift, and go to state 50
    BOOL_CONST  shift, and go to state 51
    OBJECTID    shift, and go to state 52
    NOT         shift, and go to state 53
    '~'         shift, and go to state 54
    '{'         shift, and go to state 55
    '('         shift, and go to state 56

    expr  go to state 103


State 81

   28 expr: . OBJECTID ASSIGN expr
   29     | . expr '.' OBJECTID '(' expr_list_comma_sep ')'
   30     | . expr '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   31     | . OBJECTID '(' expr_list_comma_sep ')'
   32     | . IF expr THEN expr ELSE expr FI
   33     | . WHILE expr LOOP expr POOL
   34     | . '{' expr_list_semicolon_sep '}'
   35     | . LET expr_let_body
   36     | . CASE expr OF case_branch_list ESAC
   37     | . NEW TYPEID
   38     | . ISVOID expr
   39     | . expr '+' expr
   40     | . expr '-' expr
   41     | . expr '*' expr
   42     | . expr '/' expr
   42     | expr '/' . expr
   43     | . '~' expr
   44     | . expr '<' expr
   45     | . expr LE expr
   46     | . expr '=' expr
   47     | . NOT expr
   48     | . '(' expr ')'
   49     | . OBJECTID
   50     | . INT_CONST
   51     | . STR_CONST
   52     | . BOOL_CONST

    IF          shift, and go to state 43
    LET         shift, and go to state 44
    WHILE       shift, and go to state 45
    CASE        shift, and go to state 46
    NEW         shift, and go to state 47
    ISVOID      shift, and go to state 48
    STR_CONST   shift, and go to state 49
    INT_CONST   shift, and go to state 50
    BOOL_CONST  shift, and go to state 51
    OBJECTID    shift, and go to state 52
    NOT         shift, and go to state 53
    '~'         shift, and go to state 54
    '{'         shift, and go to state 55
    '('         shift, and go to state 56

    expr  go to state 104


State 82

   29 expr: expr '.' . OBJECTID '(' expr_list_comma_sep ')'

    OBJECTID  shift, and go to state 105


State 83

   30 expr: expr '@' . TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'

    TYPEID  shift, and go to state 106


State 84

   12 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' . expr '}'
   28 expr: . OBJECTID ASSIGN expr
   29     | . expr '.' OBJECTID '(' expr_list_comma_sep ')'
   30     | . expr '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   31     | . OBJECTID '(' expr_list_comma_sep ')'
   32     | . IF expr THEN expr ELSE expr FI
   33     | . WHILE expr LOOP expr POOL
   34     | . '{' expr_list_semicolon_sep '}'
   35     | . LET expr_let_body
   36     | . CASE expr OF case_branch_list ESAC
   37     | . NEW TYPEID
   38     | . ISVOID expr
   39     | . expr '+' expr
   40     | . expr '-' expr
   41     | . expr '*' expr
   42     | . expr '/' expr
   43     | . '~' expr
   44     | . expr '<' expr
   45     | . expr LE expr
   46     | . expr '=' expr
   47     | . NOT expr
   48     | . '(' expr ')'
   49     | . OBJECTID
   50     | . INT_CONST
   51     | . STR_CONST
   52     | . BOOL_CONST

    IF          shift, and go to state 43
    LET         shift, and go to state 44
    WHILE       shift, and go to state 45
    CASE        shift, and go to state 46
    NEW         shift, and go to state 47
    ISVOID      shift, and go to state 48
    STR_CONST   shift, and go to state 49
    INT_CONST   shift, and go to state 50
    BOOL_CONST  shift, and go to state 51
    OBJECTID    shift, and go to state 52
    NOT         shift, and go to state 53
    '~'         shift, and go to state 54
    '{'         shift, and go to state 55
    '('         shift, and go to state 56

    expr  go to state 107


State 85

   28 expr: . OBJECTID ASSIGN expr
   29     | . expr '.' OBJECTID '(' expr_list_comma_sep ')'
   30     | . expr '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   31     | . OBJECTID '(' expr_list_comma_sep ')'
   32     | . IF expr THEN expr ELSE expr FI
   32     | IF expr THEN . expr ELSE expr FI
   33     | . WHILE expr LOOP expr POOL
   34     | . '{' expr_list_semicolon_sep '}'
   35     | . LET expr_let_body
   36     | . CASE expr OF case_branch_list ESAC
   37     | . NEW TYPEID
   38     | . ISVOID expr
   39     | . expr '+' expr
   40     | . expr '-' expr
   41     | . expr '*' expr
   42     | . expr '/' expr
   43     | . '~' expr
   44     | . expr '<' expr
   45     | . expr LE expr
   46     | . expr '=' expr
   47     | . NOT expr
   48     | . '(' expr ')'
   49     | . OBJECTID
   50     | . INT_CONST
   51     | . STR_CONST
   52     | . BOOL_CONST

    IF          shift, and go to state 43
    LET         shift, and go to state 44
    WHILE       shift, and go to state 45
    CASE        shift, and go to state 46
    NEW         shift, and go to state 47
    ISVOID      shift, and go to state 48
    STR_CONST   shift, and go to state 49
    INT_CONST   shift, and go to state 50
    BOOL_CONST  shift, and go to state 51
    OBJECTID    shift, and go to state 52
    NOT         shift, and go to state 53
    '~'         shift, and go to state 54
    '{'         shift, and go to state 55
    '('         shift, and go to state 56

    expr  go to state 108


State 86

   53 expr_let_body: . OBJECTID ':' TYPEID IN expr
   54              | . OBJECTID ':' TYPEID ASSIGN expr IN expr
   55              | . OBJECTID ':' TYPEID ',' expr_let_body
   56              | . OBJECTID ':' TYPEID ASSIGN expr ',' expr_let_body
   57              | . error ',' expr_let_body
   57              | error ',' . expr_let_body

    error     shift, and go to state 60
    OBJECTID  shift, and go to state 61

    expr_let_body  go to state 109


State 87

   53 expr_let_body: OBJECTID ':' . TYPEID IN expr
   54              | OBJECTID ':' . TYPEID ASSIGN expr IN expr
   55              | OBJECTID ':' . TYPEID ',' expr_let_body
   56              | OBJECTID ':' . TYPEID ASSIGN expr ',' expr_let_body

    TYPEID  shift, and go to state 110


State 88

   28 expr: . OBJECTID ASSIGN expr
   29     | . expr '.' OBJECTID '(' expr_list_comma_sep ')'
   30     | . expr '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   31     | . OBJECTID '(' expr_list_comma_sep ')'
   32     | . IF expr THEN expr ELSE expr FI
   33     | . WHILE expr LOOP expr POOL
   33     | WHILE expr LOOP . expr POOL
   34     | . '{' expr_list_semicolon_sep '}'
   35     | . LET expr_let_body
   36     | . CASE expr OF case_branch_list ESAC
   37     | . NEW TYPEID
   38     | . ISVOID expr
   39     | . expr '+' expr
   40     | . expr '-' expr
   41     | . expr '*' expr
   42     | . expr '/' expr
   43     | . '~' expr
   44     | . expr '<' expr
   45     | . expr LE expr
   46     | . expr '=' expr
   47     | . NOT expr
   48     | . '(' expr ')'
   49     | . OBJECTID
   50     | . INT_CONST
   51     | . STR_CONST
   52     | . BOOL_CONST

    IF          shift, and go to state 43
    LET         shift, and go to state 44
    WHILE       shift, and go to state 45
    CASE        shift, and go to state 46
    NEW         shift, and go to state 47
    ISVOID      shift, and go to state 48
    STR_CONST   shift, and go to state 49
    INT_CONST   shift, and go to state 50
    BOOL_CONST  shift, and go to state 51
    OBJECTID    shift, and go to state 52
    NOT         shift, and go to state 53
    '~'         shift, and go to state 54
    '{'         shift, and go to state 55
    '('         shift, and go to state 56

    expr  go to state 111


State 89

   36 expr: CASE expr OF . case_branch_list ESAC
   58 case_branch_list: . case_ ';'
   59                 | . case_branch_list case_ ';'
   60                 | . case_branch_list error ';'
   61 case_: . OBJECTID ':' TYPEID DARROW expr

    OBJECTID  shift, and go to state 112

    case_branch_list  go to state 113
    case_             go to state 114


State 90

   28 expr: OBJECTID ASSIGN expr .
   29     | expr . '.' OBJECTID '(' expr_list_comma_sep ')'
   30     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   39     | expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   44     | expr . '<' expr
   45     | expr . LE expr
   46     | expr . '=' expr

    LE   shift, and go to state 75
    '<'  shift, and go to state 76
    '='  shift, and go to state 77
    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    '*'  shift, and go to state 80
    '/'  shift, and go to state 81
    '.'  shift, and go to state 82
    '@'  shift, and go to state 83

    '@'       [reduce using rule 28 (expr)]
    $default  reduce using rule 28 (expr)


State 91

   23 expr_list_comma_sep: expr_list_comma_sep . ',' expr
   24                    | expr_list_comma_sep . ',' error
   31 expr: OBJECTID '(' expr_list_comma_sep . ')'

    ')'  shift, and go to state 115
    ','  shift, and go to state 116


State 92

   22 expr_list_comma_sep: expr .
   29 expr: expr . '.' OBJECTID '(' expr_list_comma_sep ')'
   30     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   39     | expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   44     | expr . '<' expr
   45     | expr . LE expr
   46     | expr . '=' expr

    LE   shift, and go to state 75
    '<'  shift, and go to state 76
    '='  shift, and go to state 77
    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    '*'  shift, and go to state 80
    '/'  shift, and go to state 81
    '.'  shift, and go to state 82
    '@'  shift, and go to state 83

    $default  reduce using rule 22 (expr_list_comma_sep)


State 93

   27 expr_list_semicolon_sep: error ';' .

    $default  reduce using rule 27 (expr_list_semicolon_sep)


State 94

   34 expr: '{' expr_list_semicolon_sep '}' .

    $default  reduce using rule 34 (expr)


State 95

   26 expr_list_semicolon_sep: expr_list_semicolon_sep expr . ';'
   29 expr: expr . '.' OBJECTID '(' expr_list_comma_sep ')'
   30     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   39     | expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   44     | expr . '<' expr
   45     | expr . LE expr
   46     | expr . '=' expr

    LE   shift, and go to state 75
    '<'  shift, and go to state 76
    '='  shift, and go to state 77
    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    '*'  shift, and go to state 80
    '/'  shift, and go to state 81
    '.'  shift, and go to state 82
    ';'  shift, and go to state 117
    '@'  shift, and go to state 83


State 96

   25 expr_list_semicolon_sep: expr ';' .

    $default  reduce using rule 25 (expr_list_semicolon_sep)


State 97

   48 expr: '(' expr ')' .

    $default  reduce using rule 48 (expr)


State 98

   29 expr: expr . '.' OBJECTID '(' expr_list_comma_sep ')'
   30     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   39     | expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   44     | expr . '<' expr
   45     | expr . LE expr
   45     | expr LE expr .
   46     | expr . '=' expr

    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    '*'  shift, and go to state 80
    '/'  shift, and go to state 81
    '.'  shift, and go to state 82
    '@'  shift, and go to state 83

    LE   error (nonassociative)
    '<'  error (nonassociative)
    '='  error (nonassociative)

    '@'       [reduce using rule 45 (expr)]
    $default  reduce using rule 45 (expr)


State 99

   29 expr: expr . '.' OBJECTID '(' expr_list_comma_sep ')'
   30     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   39     | expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   44     | expr . '<' expr
   44     | expr '<' expr .
   45     | expr . LE expr
   46     | expr . '=' expr

    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    '*'  shift, and go to state 80
    '/'  shift, and go to state 81
    '.'  shift, and go to state 82
    '@'  shift, and go to state 83

    LE   error (nonassociative)
    '<'  error (nonassociative)
    '='  error (nonassociative)

    '@'       [reduce using rule 44 (expr)]
    $default  reduce using rule 44 (expr)


State 100

   29 expr: expr . '.' OBJECTID '(' expr_list_comma_sep ')'
   30     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   39     | expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   44     | expr . '<' expr
   45     | expr . LE expr
   46     | expr . '=' expr
   46     | expr '=' expr .

    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    '*'  shift, and go to state 80
    '/'  shift, and go to state 81
    '.'  shift, and go to state 82
    '@'  shift, and go to state 83

    LE   error (nonassociative)
    '<'  error (nonassociative)
    '='  error (nonassociative)

    '@'       [reduce using rule 46 (expr)]
    $default  reduce using rule 46 (expr)


State 101

   29 expr: expr . '.' OBJECTID '(' expr_list_comma_sep ')'
   30     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   39     | expr . '+' expr
   39     | expr '+' expr .
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   44     | expr . '<' expr
   45     | expr . LE expr
   46     | expr . '=' expr

    '*'  shift, and go to state 80
    '/'  shift, and go to state 81
    '.'  shift, and go to state 82
    '@'  shift, and go to state 83

    '@'       [reduce using rule 39 (expr)]
    $default  reduce using rule 39 (expr)


State 102

   29 expr: expr . '.' OBJECTID '(' expr_list_comma_sep ')'
   30     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   39     | expr . '+' expr
   40     | expr . '-' expr
   40     | expr '-' expr .
   41     | expr . '*' expr
   42     | expr . '/' expr
   44     | expr . '<' expr
   45     | expr . LE expr
   46     | expr . '=' expr

    '*'  shift, and go to state 80
    '/'  shift, and go to state 81
    '.'  shift, and go to state 82
    '@'  shift, and go to state 83

    '@'       [reduce using rule 40 (expr)]
    $default  reduce using rule 40 (expr)


State 103

   29 expr: expr . '.' OBJECTID '(' expr_list_comma_sep ')'
   30     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   39     | expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   41     | expr '*' expr .
   42     | expr . '/' expr
   44     | expr . '<' expr
   45     | expr . LE expr
   46     | expr . '=' expr

    '.'  shift, and go to state 82
    '@'  shift, and go to state 83

    '@'       [reduce using rule 41 (expr)]
    $default  reduce using rule 41 (expr)


State 104

   29 expr: expr . '.' OBJECTID '(' expr_list_comma_sep ')'
   30     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   39     | expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   42     | expr '/' expr .
   44     | expr . '<' expr
   45     | expr . LE expr
   46     | expr . '=' expr

    '.'  shift, and go to state 82
    '@'  shift, and go to state 83

    '@'       [reduce using rule 42 (expr)]
    $default  reduce using rule 42 (expr)


State 105

   29 expr: expr '.' OBJECTID . '(' expr_list_comma_sep ')'

    '('  shift, and go to state 118


State 106

   30 expr: expr '@' TYPEID . '.' OBJECTID '(' expr_list_comma_sep ')'

    '.'  shift, and go to state 119


State 107

   12 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' expr . '}'
   29 expr: expr . '.' OBJECTID '(' expr_list_comma_sep ')'
   30     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   39     | expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   44     | expr . '<' expr
   45     | expr . LE expr
   46     | expr . '=' expr

    LE   shift, and go to state 75
    '<'  shift, and go to state 76
    '='  shift, and go to state 77
    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    '*'  shift, and go to state 80
    '/'  shift, and go to state 81
    '.'  shift, and go to state 82
    '}'  shift, and go to state 120
    '@'  shift, and go to state 83


State 108

   29 expr: expr . '.' OBJECTID '(' expr_list_comma_sep ')'
   30     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   32     | IF expr THEN expr . ELSE expr FI
   39     | expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   44     | expr . '<' expr
   45     | expr . LE expr
   46     | expr . '=' expr

    ELSE  shift, and go to state 121
    LE    shift, and go to state 75
    '<'   shift, and go to state 76
    '='   shift, and go to state 77
    '+'   shift, and go to state 78
    '-'   shift, and go to state 79
    '*'   shift, and go to state 80
    '/'   shift, and go to state 81
    '.'   shift, and go to state 82
    '@'   shift, and go to state 83


State 109

   57 expr_let_body: error ',' expr_let_body .

    $default  reduce using rule 57 (expr_let_body)


State 110

   53 expr_let_body: OBJECTID ':' TYPEID . IN expr
   54              | OBJECTID ':' TYPEID . ASSIGN expr IN expr
   55              | OBJECTID ':' TYPEID . ',' expr_let_body
   56              | OBJECTID ':' TYPEID . ASSIGN expr ',' expr_let_body

    IN      shift, and go to state 122
    ASSIGN  shift, and go to state 123
    ','     shift, and go to state 124


State 111

   29 expr: expr . '.' OBJECTID '(' expr_list_comma_sep ')'
   30     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   33     | WHILE expr LOOP expr . POOL
   39     | expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   44     | expr . '<' expr
   45     | expr . LE expr
   46     | expr . '=' expr

    POOL  shift, and go to state 125
    LE    shift, and go to state 75
    '<'   shift, and go to state 76
    '='   shift, and go to state 77
    '+'   shift, and go to state 78
    '-'   shift, and go to state 79
    '*'   shift, and go to state 80
    '/'   shift, and go to state 81
    '.'   shift, and go to state 82
    '@'   shift, and go to state 83


State 112

   61 case_: OBJECTID . ':' TYPEID DARROW expr

    ':'  shift, and go to state 126


State 113

   36 expr: CASE expr OF case_branch_list . ESAC
   59 case_branch_list: case_branch_list . case_ ';'
   60                 | case_branch_list . error ';'
   61 case_: . OBJECTID ':' TYPEID DARROW expr

    error     shift, and go to state 127
    ESAC      shift, and go to state 128
    OBJECTID  shift, and go to state 112

    case_  go to state 129


State 114

   58 case_branch_list: case_ . ';'

    ';'  shift, and go to state 130


State 115

   31 expr: OBJECTID '(' expr_list_comma_sep ')' .

    $default  reduce using rule 31 (expr)


State 116

   23 expr_list_comma_sep: expr_list_comma_sep ',' . expr
   24                    | expr_list_comma_sep ',' . error
   28 expr: . OBJECTID ASSIGN expr
   29     | . expr '.' OBJECTID '(' expr_list_comma_sep ')'
   30     | . expr '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   31     | . OBJECTID '(' expr_list_comma_sep ')'
   32     | . IF expr THEN expr ELSE expr FI
   33     | . WHILE expr LOOP expr POOL
   34     | . '{' expr_list_semicolon_sep '}'
   35     | . LET expr_let_body
   36     | . CASE expr OF case_branch_list ESAC
   37     | . NEW TYPEID
   38     | . ISVOID expr
   39     | . expr '+' expr
   40     | . expr '-' expr
   41     | . expr '*' expr
   42     | . expr '/' expr
   43     | . '~' expr
   44     | . expr '<' expr
   45     | . expr LE expr
   46     | . expr '=' expr
   47     | . NOT expr
   48     | . '(' expr ')'
   49     | . OBJECTID
   50     | . INT_CONST
   51     | . STR_CONST
   52     | . BOOL_CONST

    error       shift, and go to state 131
    IF          shift, and go to state 43
    LET         shift, and go to state 44
    WHILE       shift, and go to state 45
    CASE        shift, and go to state 46
    NEW         shift, and go to state 47
    ISVOID      shift, and go to state 48
    STR_CONST   shift, and go to state 49
    INT_CONST   shift, and go to state 50
    BOOL_CONST  shift, and go to state 51
    OBJECTID    shift, and go to state 52
    NOT         shift, and go to state 53
    '~'         shift, and go to state 54
    '{'         shift, and go to state 55
    '('         shift, and go to state 56

    expr  go to state 132


State 117

   26 expr_list_semicolon_sep: expr_list_semicolon_sep expr ';' .

    $default  reduce using rule 26 (expr_list_semicolon_sep)


State 118

   21 expr_list_comma_sep: . %empty
   22                    | . expr
   23                    | . expr_list_comma_sep ',' expr
   24                    | . expr_list_comma_sep ',' error
   28 expr: . OBJECTID ASSIGN expr
   29     | . expr '.' OBJECTID '(' expr_list_comma_sep ')'
   29     | expr '.' OBJECTID '(' . expr_list_comma_sep ')'
   30     | . expr '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   31     | . OBJECTID '(' expr_list_comma_sep ')'
   32     | . IF expr THEN expr ELSE expr FI
   33     | . WHILE expr LOOP expr POOL
   34     | . '{' expr_list_semicolon_sep '}'
   35     | . LET expr_let_body
   36     | . CASE expr OF case_branch_list ESAC
   37     | . NEW TYPEID
   38     | . ISVOID expr
   39     | . expr '+' expr
   40     | . expr '-' expr
   41     | . expr '*' expr
   42     | . expr '/' expr
   43     | . '~' expr
   44     | . expr '<' expr
   45     | . expr LE expr
   46     | . expr '=' expr
   47     | . NOT expr
   48     | . '(' expr ')'
   49     | . OBJECTID
   50     | . INT_CONST
   51     | . STR_CONST
   52     | . BOOL_CONST

    IF          shift, and go to state 43
    LET         shift, and go to state 44
    WHILE       shift, and go to state 45
    CASE        shift, and go to state 46
    NEW         shift, and go to state 47
    ISVOID      shift, and go to state 48
    STR_CONST   shift, and go to state 49
    INT_CONST   shift, and go to state 50
    BOOL_CONST  shift, and go to state 51
    OBJECTID    shift, and go to state 52
    NOT         shift, and go to state 53
    '~'         shift, and go to state 54
    '{'         shift, and go to state 55
    '('         shift, and go to state 56

    $default  reduce using rule 21 (expr_list_comma_sep)

    expr_list_comma_sep  go to state 133
    expr                 go to state 92


State 119

   30 expr: expr '@' TYPEID '.' . OBJECTID '(' expr_list_comma_sep ')'

    OBJECTID  shift, and go to state 134


State 120

   12 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' expr '}' .

    $default  reduce using rule 12 (feature)


State 121

   28 expr: . OBJECTID ASSIGN expr
   29     | . expr '.' OBJECTID '(' expr_list_comma_sep ')'
   30     | . expr '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   31     | . OBJECTID '(' expr_list_comma_sep ')'
   32     | . IF expr THEN expr ELSE expr FI
   32     | IF expr THEN expr ELSE . expr FI
   33     | . WHILE expr LOOP expr POOL
   34     | . '{' expr_list_semicolon_sep '}'
   35     | . LET expr_let_body
   36     | . CASE expr OF case_branch_list ESAC
   37     | . NEW TYPEID
   38     | . ISVOID expr
   39     | . expr '+' expr
   40     | . expr '-' expr
   41     | . expr '*' expr
   42     | . expr '/' expr
   43     | . '~' expr
   44     | . expr '<' expr
   45     | . expr LE expr
   46     | . expr '=' expr
   47     | . NOT expr
   48     | . '(' expr ')'
   49     | . OBJECTID
   50     | . INT_CONST
   51     | . STR_CONST
   52     | . BOOL_CONST

    IF          shift, and go to state 43
    LET         shift, and go to state 44
    WHILE       shift, and go to state 45
    CASE        shift, and go to state 46
    NEW         shift, and go to state 47
    ISVOID      shift, and go to state 48
    STR_CONST   shift, and go to state 49
    INT_CONST   shift, and go to state 50
    BOOL_CONST  shift, and go to state 51
    OBJECTID    shift, and go to state 52
    NOT         shift, and go to state 53
    '~'         shift, and go to state 54
    '{'         shift, and go to state 55
    '('         shift, and go to state 56

    expr  go to state 135


State 122

   28 expr: . OBJECTID ASSIGN expr
   29     | . expr '.' OBJECTID '(' expr_list_comma_sep ')'
   30     | . expr '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   31     | . OBJECTID '(' expr_list_comma_sep ')'
   32     | . IF expr THEN expr ELSE expr FI
   33     | . WHILE expr LOOP expr POOL
   34     | . '{' expr_list_semicolon_sep '}'
   35     | . LET expr_let_body
   36     | . CASE expr OF case_branch_list ESAC
   37     | . NEW TYPEID
   38     | . ISVOID expr
   39     | . expr '+' expr
   40     | . expr '-' expr
   41     | . expr '*' expr
   42     | . expr '/' expr
   43     | . '~' expr
   44     | . expr '<' expr
   45     | . expr LE expr
   46     | . expr '=' expr
   47     | . NOT expr
   48     | . '(' expr ')'
   49     | . OBJECTID
   50     | . INT_CONST
   51     | . STR_CONST
   52     | . BOOL_CONST
   53 expr_let_body: OBJECTID ':' TYPEID IN . expr

    IF          shift, and go to state 43
    LET         shift, and go to state 44
    WHILE       shift, and go to state 45
    CASE        shift, and go to state 46
    NEW         shift, and go to state 47
    ISVOID      shift, and go to state 48
    STR_CONST   shift, and go to state 49
    INT_CONST   shift, and go to state 50
    BOOL_CONST  shift, and go to state 51
    OBJECTID    shift, and go to state 52
    NOT         shift, and go to state 53
    '~'         shift, and go to state 54
    '{'         shift, and go to state 55
    '('         shift, and go to state 56

    expr  go to state 136


State 123

   28 expr: . OBJECTID ASSIGN expr
   29     | . expr '.' OBJECTID '(' expr_list_comma_sep ')'
   30     | . expr '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   31     | . OBJECTID '(' expr_list_comma_sep ')'
   32     | . IF expr THEN expr ELSE expr FI
   33     | . WHILE expr LOOP expr POOL
   34     | . '{' expr_list_semicolon_sep '}'
   35     | . LET expr_let_body
   36     | . CASE expr OF case_branch_list ESAC
   37     | . NEW TYPEID
   38     | . ISVOID expr
   39     | . expr '+' expr
   40     | . expr '-' expr
   41     | . expr '*' expr
   42     | . expr '/' expr
   43     | . '~' expr
   44     | . expr '<' expr
   45     | . expr LE expr
   46     | . expr '=' expr
   47     | . NOT expr
   48     | . '(' expr ')'
   49     | . OBJECTID
   50     | . INT_CONST
   51     | . STR_CONST
   52     | . BOOL_CONST
   54 expr_let_body: OBJECTID ':' TYPEID ASSIGN . expr IN expr
   56              | OBJECTID ':' TYPEID ASSIGN . expr ',' expr_let_body

    IF          shift, and go to state 43
    LET         shift, and go to state 44
    WHILE       shift, and go to state 45
    CASE        shift, and go to state 46
    NEW         shift, and go to state 47
    ISVOID      shift, and go to state 48
    STR_CONST   shift, and go to state 49
    INT_CONST   shift, and go to state 50
    BOOL_CONST  shift, and go to state 51
    OBJECTID    shift, and go to state 52
    NOT         shift, and go to state 53
    '~'         shift, and go to state 54
    '{'         shift, and go to state 55
    '('         shift, and go to state 56

    expr  go to state 137


State 124

   53 expr_let_body: . OBJECTID ':' TYPEID IN expr
   54              | . OBJECTID ':' TYPEID ASSIGN expr IN expr
   55              | . OBJECTID ':' TYPEID ',' expr_let_body
   55              | OBJECTID ':' TYPEID ',' . expr_let_body
   56              | . OBJECTID ':' TYPEID ASSIGN expr ',' expr_let_body
   57              | . error ',' expr_let_body

    error     shift, and go to state 60
    OBJECTID  shift, and go to state 61

    expr_let_body  go to state 138


State 125

   33 expr: WHILE expr LOOP expr POOL .

    $default  reduce using rule 33 (expr)


State 126

   61 case_: OBJECTID ':' . TYPEID DARROW expr

    TYPEID  shift, and go to state 139


State 127

   60 case_branch_list: case_branch_list error . ';'

    ';'  shift, and go to state 140


State 128

   36 expr: CASE expr OF case_branch_list ESAC .

    $default  reduce using rule 36 (expr)


State 129

   59 case_branch_list: case_branch_list case_ . ';'

    ';'  shift, and go to state 141


State 130

   58 case_branch_list: case_ ';' .

    $default  reduce using rule 58 (case_branch_list)


State 131

   24 expr_list_comma_sep: expr_list_comma_sep ',' error .

    $default  reduce using rule 24 (expr_list_comma_sep)


State 132

   23 expr_list_comma_sep: expr_list_comma_sep ',' expr .
   29 expr: expr . '.' OBJECTID '(' expr_list_comma_sep ')'
   30     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   39     | expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   44     | expr . '<' expr
   45     | expr . LE expr
   46     | expr . '=' expr

    LE   shift, and go to state 75
    '<'  shift, and go to state 76
    '='  shift, and go to state 77
    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    '*'  shift, and go to state 80
    '/'  shift, and go to state 81
    '.'  shift, and go to state 82
    '@'  shift, and go to state 83

    $default  reduce using rule 23 (expr_list_comma_sep)


State 133

   23 expr_list_comma_sep: expr_list_comma_sep . ',' expr
   24                    | expr_list_comma_sep . ',' error
   29 expr: expr '.' OBJECTID '(' expr_list_comma_sep . ')'

    ')'  shift, and go to state 142
    ','  shift, and go to state 116


State 134

   30 expr: expr '@' TYPEID '.' OBJECTID . '(' expr_list_comma_sep ')'

    '('  shift, and go to state 143


State 135

   29 expr: expr . '.' OBJECTID '(' expr_list_comma_sep ')'
   30     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   32     | IF expr THEN expr ELSE expr . FI
   39     | expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   44     | expr . '<' expr
   45     | expr . LE expr
   46     | expr . '=' expr

    FI   shift, and go to state 144
    LE   shift, and go to state 75
    '<'  shift, and go to state 76
    '='  shift, and go to state 77
    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    '*'  shift, and go to state 80
    '/'  shift, and go to state 81
    '.'  shift, and go to state 82
    '@'  shift, and go to state 83


State 136

   29 expr: expr . '.' OBJECTID '(' expr_list_comma_sep ')'
   30     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   39     | expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   44     | expr . '<' expr
   45     | expr . LE expr
   46     | expr . '=' expr
   53 expr_let_body: OBJECTID ':' TYPEID IN expr .

    LE   shift, and go to state 75
    '<'  shift, and go to state 76
    '='  shift, and go to state 77
    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    '*'  shift, and go to state 80
    '/'  shift, and go to state 81
    '.'  shift, and go to state 82
    '@'  shift, and go to state 83

    LE        [reduce using rule 53 (expr_let_body)]
    '<'       [reduce using rule 53 (expr_let_body)]
    '='       [reduce using rule 53 (expr_let_body)]
    '+'       [reduce using rule 53 (expr_let_body)]
    '-'       [reduce using rule 53 (expr_let_body)]
    '*'       [reduce using rule 53 (expr_let_body)]
    '/'       [reduce using rule 53 (expr_let_body)]
    '.'       [reduce using rule 53 (expr_let_body)]
    '@'       [reduce using rule 53 (expr_let_body)]
    $default  reduce using rule 53 (expr_let_body)


State 137

   29 expr: expr . '.' OBJECTID '(' expr_list_comma_sep ')'
   30     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   39     | expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   44     | expr . '<' expr
   45     | expr . LE expr
   46     | expr . '=' expr
   54 expr_let_body: OBJECTID ':' TYPEID ASSIGN expr . IN expr
   56              | OBJECTID ':' TYPEID ASSIGN expr . ',' expr_let_body

    IN   shift, and go to state 145
    LE   shift, and go to state 75
    '<'  shift, and go to state 76
    '='  shift, and go to state 77
    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    '*'  shift, and go to state 80
    '/'  shift, and go to state 81
    '.'  shift, and go to state 82
    ','  shift, and go to state 146
    '@'  shift, and go to state 83


State 138

   55 expr_let_body: OBJECTID ':' TYPEID ',' expr_let_body .

    $default  reduce using rule 55 (expr_let_body)


State 139

   61 case_: OBJECTID ':' TYPEID . DARROW expr

    DARROW  shift, and go to state 147


State 140

   60 case_branch_list: case_branch_list error ';' .

    $default  reduce using rule 60 (case_branch_list)


State 141

   59 case_branch_list: case_branch_list case_ ';' .

    $default  reduce using rule 59 (case_branch_list)


State 142

   29 expr: expr '.' OBJECTID '(' expr_list_comma_sep ')' .

    $default  reduce using rule 29 (expr)


State 143

   21 expr_list_comma_sep: . %empty
   22                    | . expr
   23                    | . expr_list_comma_sep ',' expr
   24                    | . expr_list_comma_sep ',' error
   28 expr: . OBJECTID ASSIGN expr
   29     | . expr '.' OBJECTID '(' expr_list_comma_sep ')'
   30     | . expr '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   30     | expr '@' TYPEID '.' OBJECTID '(' . expr_list_comma_sep ')'
   31     | . OBJECTID '(' expr_list_comma_sep ')'
   32     | . IF expr THEN expr ELSE expr FI
   33     | . WHILE expr LOOP expr POOL
   34     | . '{' expr_list_semicolon_sep '}'
   35     | . LET expr_let_body
   36     | . CASE expr OF case_branch_list ESAC
   37     | . NEW TYPEID
   38     | . ISVOID expr
   39     | . expr '+' expr
   40     | . expr '-' expr
   41     | . expr '*' expr
   42     | . expr '/' expr
   43     | . '~' expr
   44     | . expr '<' expr
   45     | . expr LE expr
   46     | . expr '=' expr
   47     | . NOT expr
   48     | . '(' expr ')'
   49     | . OBJECTID
   50     | . INT_CONST
   51     | . STR_CONST
   52     | . BOOL_CONST

    IF          shift, and go to state 43
    LET         shift, and go to state 44
    WHILE       shift, and go to state 45
    CASE        shift, and go to state 46
    NEW         shift, and go to state 47
    ISVOID      shift, and go to state 48
    STR_CONST   shift, and go to state 49
    INT_CONST   shift, and go to state 50
    BOOL_CONST  shift, and go to state 51
    OBJECTID    shift, and go to state 52
    NOT         shift, and go to state 53
    '~'         shift, and go to state 54
    '{'         shift, and go to state 55
    '('         shift, and go to state 56

    $default  reduce using rule 21 (expr_list_comma_sep)

    expr_list_comma_sep  go to state 148
    expr                 go to state 92


State 144

   32 expr: IF expr THEN expr ELSE expr FI .

    $default  reduce using rule 32 (expr)


State 145

   28 expr: . OBJECTID ASSIGN expr
   29     | . expr '.' OBJECTID '(' expr_list_comma_sep ')'
   30     | . expr '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   31     | . OBJECTID '(' expr_list_comma_sep ')'
   32     | . IF expr THEN expr ELSE expr FI
   33     | . WHILE expr LOOP expr POOL
   34     | . '{' expr_list_semicolon_sep '}'
   35     | . LET expr_let_body
   36     | . CASE expr OF case_branch_list ESAC
   37     | . NEW TYPEID
   38     | . ISVOID expr
   39     | . expr '+' expr
   40     | . expr '-' expr
   41     | . expr '*' expr
   42     | . expr '/' expr
   43     | . '~' expr
   44     | . expr '<' expr
   45     | . expr LE expr
   46     | . expr '=' expr
   47     | . NOT expr
   48     | . '(' expr ')'
   49     | . OBJECTID
   50     | . INT_CONST
   51     | . STR_CONST
   52     | . BOOL_CONST
   54 expr_let_body: OBJECTID ':' TYPEID ASSIGN expr IN . expr

    IF          shift, and go to state 43
    LET         shift, and go to state 44
    WHILE       shift, and go to state 45
    CASE        shift, and go to state 46
    NEW         shift, and go to state 47
    ISVOID      shift, and go to state 48
    STR_CONST   shift, and go to state 49
    INT_CONST   shift, and go to state 50
    BOOL_CONST  shift, and go to state 51
    OBJECTID    shift, and go to state 52
    NOT         shift, and go to state 53
    '~'         shift, and go to state 54
    '{'         shift, and go to state 55
    '('         shift, and go to state 56

    expr  go to state 149


State 146

   53 expr_let_body: . OBJECTID ':' TYPEID IN expr
   54              | . OBJECTID ':' TYPEID ASSIGN expr IN expr
   55              | . OBJECTID ':' TYPEID ',' expr_let_body
   56              | . OBJECTID ':' TYPEID ASSIGN expr ',' expr_let_body
   56              | OBJECTID ':' TYPEID ASSIGN expr ',' . expr_let_body
   57              | . error ',' expr_let_body

    error     shift, and go to state 60
    OBJECTID  shift, and go to state 61

    expr_let_body  go to state 150


State 147

   28 expr: . OBJECTID ASSIGN expr
   29     | . expr '.' OBJECTID '(' expr_list_comma_sep ')'
   30     | . expr '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   31     | . OBJECTID '(' expr_list_comma_sep ')'
   32     | . IF expr THEN expr ELSE expr FI
   33     | . WHILE expr LOOP expr POOL
   34     | . '{' expr_list_semicolon_sep '}'
   35     | . LET expr_let_body
   36     | . CASE expr OF case_branch_list ESAC
   37     | . NEW TYPEID
   38     | . ISVOID expr
   39     | . expr '+' expr
   40     | . expr '-' expr
   41     | . expr '*' expr
   42     | . expr '/' expr
   43     | . '~' expr
   44     | . expr '<' expr
   45     | . expr LE expr
   46     | . expr '=' expr
   47     | . NOT expr
   48     | . '(' expr ')'
   49     | . OBJECTID
   50     | . INT_CONST
   51     | . STR_CONST
   52     | . BOOL_CONST
   61 case_: OBJECTID ':' TYPEID DARROW . expr

    IF          shift, and go to state 43
    LET         shift, and go to state 44
    WHILE       shift, and go to state 45
    CASE        shift, and go to state 46
    NEW         shift, and go to state 47
    ISVOID      shift, and go to state 48
    STR_CONST   shift, and go to state 49
    INT_CONST   shift, and go to state 50
    BOOL_CONST  shift, and go to state 51
    OBJECTID    shift, and go to state 52
    NOT         shift, and go to state 53
    '~'         shift, and go to state 54
    '{'         shift, and go to state 55
    '('         shift, and go to state 56

    expr  go to state 151


State 148

   23 expr_list_comma_sep: expr_list_comma_sep . ',' expr
   24                    | expr_list_comma_sep . ',' error
   30 expr: expr '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep . ')'

    ')'  shift, and go to state 152
    ','  shift, and go to state 116


State 149

   29 expr: expr . '.' OBJECTID '(' expr_list_comma_sep ')'
   30     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   39     | expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   44     | expr . '<' expr
   45     | expr . LE expr
   46     | expr . '=' expr
   54 expr_let_body: OBJECTID ':' TYPEID ASSIGN expr IN expr .

    LE   shift, and go to state 75
    '<'  shift, and go to state 76
    '='  shift, and go to state 77
    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    '*'  shift, and go to state 80
    '/'  shift, and go to state 81
    '.'  shift, and go to state 82
    '@'  shift, and go to state 83

    LE        [reduce using rule 54 (expr_let_body)]
    '<'       [reduce using rule 54 (expr_let_body)]
    '='       [reduce using rule 54 (expr_let_body)]
    '+'       [reduce using rule 54 (expr_let_body)]
    '-'       [reduce using rule 54 (expr_let_body)]
    '*'       [reduce using rule 54 (expr_let_body)]
    '/'       [reduce using rule 54 (expr_let_body)]
    '.'       [reduce using rule 54 (expr_let_body)]
    '@'       [reduce using rule 54 (expr_let_body)]
    $default  reduce using rule 54 (expr_let_body)


State 150

   56 expr_let_body: OBJECTID ':' TYPEID ASSIGN expr ',' expr_let_body .

    $default  reduce using rule 56 (expr_let_body)


State 151

   29 expr: expr . '.' OBJECTID '(' expr_list_comma_sep ')'
   30     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   39     | expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   44     | expr . '<' expr
   45     | expr . LE expr
   46     | expr . '=' expr
   61 case_: OBJECTID ':' TYPEID DARROW expr .

    LE   shift, and go to state 75
    '<'  shift, and go to state 76
    '='  shift, and go to state 77
    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    '*'  shift, and go to state 80
    '/'  shift, and go to state 81
    '.'  shift, and go to state 82
    '@'  shift, and go to state 83

    $default  reduce using rule 61 (case_)


State 152

   30 expr: expr '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')' .

    $default  reduce using rule 30 (expr)
