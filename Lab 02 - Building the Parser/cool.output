Terminals unused in grammar

   ERROR


State 10 conflicts: 1 shift/reduce
State 16 conflicts: 1 shift/reduce
State 58 conflicts: 1 shift/reduce
State 61 conflicts: 1 shift/reduce
State 62 conflicts: 1 shift/reduce
State 80 conflicts: 1 shift/reduce
State 87 conflicts: 1 shift/reduce
State 88 conflicts: 1 shift/reduce
State 89 conflicts: 1 shift/reduce
State 90 conflicts: 1 shift/reduce
State 91 conflicts: 1 shift/reduce
State 92 conflicts: 1 shift/reduce
State 93 conflicts: 1 shift/reduce
State 122 conflicts: 9 shift/reduce
State 134 conflicts: 9 shift/reduce


Grammar

    0 $accept: program $end

    1 program: class_list

    2 class_list: class ';'
    3           | class_list class ';'

    4 class: CLASS TYPEID '{' feature_list '}'
    5      | CLASS TYPEID INHERITS TYPEID '{' feature_list '}'

    6 feature_list: %empty
    7             | feature ';'
    8             | feature_list feature ';'

    9 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' expr '}'
   10        | OBJECTID ':' TYPEID
   11        | OBJECTID ':' TYPEID ASSIGN expr

   12 formal_list: %empty
   13            | formal
   14            | formal_list ',' formal

   15 formal: OBJECTID ':' TYPEID

   16 expr_list_comma_sep: %empty
   17                    | expr
   18                    | expr_list_comma_sep ',' expr

   19 expr_list_semicolon_sep: expr ';'
   20                        | expr_list_semicolon_sep expr ';'

   21 expr: OBJECTID ASSIGN expr
   22     | expr '.' OBJECTID '(' expr_list_comma_sep ')'
   23     | expr '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   24     | OBJECTID '(' expr_list_comma_sep ')'
   25     | IF expr THEN expr ELSE expr FI
   26     | WHILE expr LOOP expr POOL
   27     | '{' expr_list_semicolon_sep '}'
   28     | LET expr_let_body
   29     | CASE expr OF case_branch_list ESAC
   30     | NEW TYPEID
   31     | ISVOID expr
   32     | expr '+' expr
   33     | expr '-' expr
   34     | expr '*' expr
   35     | expr '/' expr
   36     | '~' expr
   37     | expr '<' expr
   38     | expr LE expr
   39     | expr '=' expr
   40     | NOT expr
   41     | '(' expr ')'
   42     | OBJECTID
   43     | INT_CONST
   44     | STR_CONST
   45     | BOOL_CONST

   46 expr_let_body: OBJECTID ':' TYPEID IN expr
   47              | OBJECTID ':' TYPEID ASSIGN expr IN expr
   48              | OBJECTID ':' TYPEID ',' expr_let_body
   49              | OBJECTID ':' TYPEID ASSIGN expr ',' expr_let_body

   50 case_branch_list: case_ ';'
   51                 | case_branch_list case_ ';'

   52 case_: OBJECTID ':' TYPEID DARROW expr


Terminals, with rules where they appear

$end (0) 0
'(' (40) 9 22 23 24 41
')' (41) 9 22 23 24 41
'*' (42) 34
'+' (43) 32
',' (44) 14 18 48 49
'-' (45) 33
'.' (46) 22 23
'/' (47) 35
':' (58) 9 10 11 15 46 47 48 49 52
';' (59) 2 3 7 8 19 20 50 51
'<' (60) 37
'=' (61) 39
'@' (64) 23
'{' (123) 4 5 9 27
'}' (125) 4 5 9 27
'~' (126) 36
error (256)
CLASS (258) 4 5
ELSE (259) 25
FI (260) 25
IF (261) 25
IN (262) 46 47
INHERITS (263) 5
LET (264) 28
LOOP (265) 26
POOL (266) 26
THEN (267) 25
WHILE (268) 26
CASE (269) 29
ESAC (270) 29
OF (271) 29
DARROW (272) 52
NEW (273) 30
ISVOID (274) 31
STR_CONST (275) 44
INT_CONST (276) 43
BOOL_CONST (277) 45
TYPEID (278) 4 5 9 10 11 15 23 30 46 47 48 49 52
OBJECTID (279) 9 10 11 15 21 22 23 24 42 46 47 48 49 52
ASSIGN (280) 11 21 47 49
NOT (281) 40
LE (282) 38
ERROR (283)


Nonterminals, with rules where they appear

$accept (45)
    on left: 0
program (46)
    on left: 1, on right: 0
class_list (47)
    on left: 2 3, on right: 1 3
class (48)
    on left: 4 5, on right: 2 3
feature_list (49)
    on left: 6 7 8, on right: 4 5 8
feature (50)
    on left: 9 10 11, on right: 7 8
formal_list (51)
    on left: 12 13 14, on right: 9 14
formal (52)
    on left: 15, on right: 13 14
expr_list_comma_sep (53)
    on left: 16 17 18, on right: 18 22 23 24
expr_list_semicolon_sep (54)
    on left: 19 20, on right: 20 27
expr (55)
    on left: 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38
    39 40 41 42 43 44 45, on right: 9 11 17 18 19 20 21 22 23 25 26
    29 31 32 33 34 35 36 37 38 39 40 41 46 47 49 52
expr_let_body (56)
    on left: 46 47 48 49, on right: 28 48 49
case_branch_list (57)
    on left: 50 51, on right: 29 51
case_ (58)
    on left: 52, on right: 50 51


State 0

    0 $accept: . program $end
    1 program: . class_list
    2 class_list: . class ';'
    3           | . class_list class ';'
    4 class: . CLASS TYPEID '{' feature_list '}'
    5      | . CLASS TYPEID INHERITS TYPEID '{' feature_list '}'

    CLASS  shift, and go to state 1

    program     go to state 2
    class_list  go to state 3
    class       go to state 4


State 1

    4 class: CLASS . TYPEID '{' feature_list '}'
    5      | CLASS . TYPEID INHERITS TYPEID '{' feature_list '}'

    TYPEID  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: class_list .
    3 class_list: class_list . class ';'
    4 class: . CLASS TYPEID '{' feature_list '}'
    5      | . CLASS TYPEID INHERITS TYPEID '{' feature_list '}'

    CLASS  shift, and go to state 1

    $default  reduce using rule 1 (program)

    class  go to state 7


State 4

    2 class_list: class . ';'

    ';'  shift, and go to state 8


State 5

    4 class: CLASS TYPEID . '{' feature_list '}'
    5      | CLASS TYPEID . INHERITS TYPEID '{' feature_list '}'

    INHERITS  shift, and go to state 9
    '{'       shift, and go to state 10


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 class_list: class_list class . ';'

    ';'  shift, and go to state 11


State 8

    2 class_list: class ';' .

    $default  reduce using rule 2 (class_list)


State 9

    5 class: CLASS TYPEID INHERITS . TYPEID '{' feature_list '}'

    TYPEID  shift, and go to state 12


State 10

    4 class: CLASS TYPEID '{' . feature_list '}'
    6 feature_list: . %empty
    7             | . feature ';'
    8             | . feature_list feature ';'
    9 feature: . OBJECTID '(' formal_list ')' ':' TYPEID '{' expr '}'
   10        | . OBJECTID ':' TYPEID
   11        | . OBJECTID ':' TYPEID ASSIGN expr

    OBJECTID  shift, and go to state 13

    OBJECTID  [reduce using rule 6 (feature_list)]
    $default  reduce using rule 6 (feature_list)

    feature_list  go to state 14
    feature       go to state 15


State 11

    3 class_list: class_list class ';' .

    $default  reduce using rule 3 (class_list)


State 12

    5 class: CLASS TYPEID INHERITS TYPEID . '{' feature_list '}'

    '{'  shift, and go to state 16


State 13

    9 feature: OBJECTID . '(' formal_list ')' ':' TYPEID '{' expr '}'
   10        | OBJECTID . ':' TYPEID
   11        | OBJECTID . ':' TYPEID ASSIGN expr

    '('  shift, and go to state 17
    ':'  shift, and go to state 18


State 14

    4 class: CLASS TYPEID '{' feature_list . '}'
    8 feature_list: feature_list . feature ';'
    9 feature: . OBJECTID '(' formal_list ')' ':' TYPEID '{' expr '}'
   10        | . OBJECTID ':' TYPEID
   11        | . OBJECTID ':' TYPEID ASSIGN expr

    OBJECTID  shift, and go to state 13
    '}'       shift, and go to state 19

    feature  go to state 20


State 15

    7 feature_list: feature . ';'

    ';'  shift, and go to state 21


State 16

    5 class: CLASS TYPEID INHERITS TYPEID '{' . feature_list '}'
    6 feature_list: . %empty
    7             | . feature ';'
    8             | . feature_list feature ';'
    9 feature: . OBJECTID '(' formal_list ')' ':' TYPEID '{' expr '}'
   10        | . OBJECTID ':' TYPEID
   11        | . OBJECTID ':' TYPEID ASSIGN expr

    OBJECTID  shift, and go to state 13

    OBJECTID  [reduce using rule 6 (feature_list)]
    $default  reduce using rule 6 (feature_list)

    feature_list  go to state 22
    feature       go to state 15


State 17

    9 feature: OBJECTID '(' . formal_list ')' ':' TYPEID '{' expr '}'
   12 formal_list: . %empty
   13            | . formal
   14            | . formal_list ',' formal
   15 formal: . OBJECTID ':' TYPEID

    OBJECTID  shift, and go to state 23

    $default  reduce using rule 12 (formal_list)

    formal_list  go to state 24
    formal       go to state 25


State 18

   10 feature: OBJECTID ':' . TYPEID
   11        | OBJECTID ':' . TYPEID ASSIGN expr

    TYPEID  shift, and go to state 26


State 19

    4 class: CLASS TYPEID '{' feature_list '}' .

    $default  reduce using rule 4 (class)


State 20

    8 feature_list: feature_list feature . ';'

    ';'  shift, and go to state 27


State 21

    7 feature_list: feature ';' .

    $default  reduce using rule 7 (feature_list)


State 22

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list . '}'
    8 feature_list: feature_list . feature ';'
    9 feature: . OBJECTID '(' formal_list ')' ':' TYPEID '{' expr '}'
   10        | . OBJECTID ':' TYPEID
   11        | . OBJECTID ':' TYPEID ASSIGN expr

    OBJECTID  shift, and go to state 13
    '}'       shift, and go to state 28

    feature  go to state 20


State 23

   15 formal: OBJECTID . ':' TYPEID

    ':'  shift, and go to state 29


State 24

    9 feature: OBJECTID '(' formal_list . ')' ':' TYPEID '{' expr '}'
   14 formal_list: formal_list . ',' formal

    ')'  shift, and go to state 30
    ','  shift, and go to state 31


State 25

   13 formal_list: formal .

    $default  reduce using rule 13 (formal_list)


State 26

   10 feature: OBJECTID ':' TYPEID .
   11        | OBJECTID ':' TYPEID . ASSIGN expr

    ASSIGN  shift, and go to state 32

    $default  reduce using rule 10 (feature)


State 27

    8 feature_list: feature_list feature ';' .

    $default  reduce using rule 8 (feature_list)


State 28

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list '}' .

    $default  reduce using rule 5 (class)


State 29

   15 formal: OBJECTID ':' . TYPEID

    TYPEID  shift, and go to state 33


State 30

    9 feature: OBJECTID '(' formal_list ')' . ':' TYPEID '{' expr '}'

    ':'  shift, and go to state 34


State 31

   14 formal_list: formal_list ',' . formal
   15 formal: . OBJECTID ':' TYPEID

    OBJECTID  shift, and go to state 23

    formal  go to state 35


State 32

   11 feature: OBJECTID ':' TYPEID ASSIGN . expr
   21 expr: . OBJECTID ASSIGN expr
   22     | . expr '.' OBJECTID '(' expr_list_comma_sep ')'
   23     | . expr '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   24     | . OBJECTID '(' expr_list_comma_sep ')'
   25     | . IF expr THEN expr ELSE expr FI
   26     | . WHILE expr LOOP expr POOL
   27     | . '{' expr_list_semicolon_sep '}'
   28     | . LET expr_let_body
   29     | . CASE expr OF case_branch_list ESAC
   30     | . NEW TYPEID
   31     | . ISVOID expr
   32     | . expr '+' expr
   33     | . expr '-' expr
   34     | . expr '*' expr
   35     | . expr '/' expr
   36     | . '~' expr
   37     | . expr '<' expr
   38     | . expr LE expr
   39     | . expr '=' expr
   40     | . NOT expr
   41     | . '(' expr ')'
   42     | . OBJECTID
   43     | . INT_CONST
   44     | . STR_CONST
   45     | . BOOL_CONST

    IF          shift, and go to state 36
    LET         shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    expr  go to state 50


State 33

   15 formal: OBJECTID ':' TYPEID .

    $default  reduce using rule 15 (formal)


State 34

    9 feature: OBJECTID '(' formal_list ')' ':' . TYPEID '{' expr '}'

    TYPEID  shift, and go to state 51


State 35

   14 formal_list: formal_list ',' formal .

    $default  reduce using rule 14 (formal_list)


State 36

   21 expr: . OBJECTID ASSIGN expr
   22     | . expr '.' OBJECTID '(' expr_list_comma_sep ')'
   23     | . expr '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   24     | . OBJECTID '(' expr_list_comma_sep ')'
   25     | . IF expr THEN expr ELSE expr FI
   25     | IF . expr THEN expr ELSE expr FI
   26     | . WHILE expr LOOP expr POOL
   27     | . '{' expr_list_semicolon_sep '}'
   28     | . LET expr_let_body
   29     | . CASE expr OF case_branch_list ESAC
   30     | . NEW TYPEID
   31     | . ISVOID expr
   32     | . expr '+' expr
   33     | . expr '-' expr
   34     | . expr '*' expr
   35     | . expr '/' expr
   36     | . '~' expr
   37     | . expr '<' expr
   38     | . expr LE expr
   39     | . expr '=' expr
   40     | . NOT expr
   41     | . '(' expr ')'
   42     | . OBJECTID
   43     | . INT_CONST
   44     | . STR_CONST
   45     | . BOOL_CONST

    IF          shift, and go to state 36
    LET         shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    expr  go to state 52


State 37

   28 expr: LET . expr_let_body
   46 expr_let_body: . OBJECTID ':' TYPEID IN expr
   47              | . OBJECTID ':' TYPEID ASSIGN expr IN expr
   48              | . OBJECTID ':' TYPEID ',' expr_let_body
   49              | . OBJECTID ':' TYPEID ASSIGN expr ',' expr_let_body

    OBJECTID  shift, and go to state 53

    expr_let_body  go to state 54


State 38

   21 expr: . OBJECTID ASSIGN expr
   22     | . expr '.' OBJECTID '(' expr_list_comma_sep ')'
   23     | . expr '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   24     | . OBJECTID '(' expr_list_comma_sep ')'
   25     | . IF expr THEN expr ELSE expr FI
   26     | . WHILE expr LOOP expr POOL
   26     | WHILE . expr LOOP expr POOL
   27     | . '{' expr_list_semicolon_sep '}'
   28     | . LET expr_let_body
   29     | . CASE expr OF case_branch_list ESAC
   30     | . NEW TYPEID
   31     | . ISVOID expr
   32     | . expr '+' expr
   33     | . expr '-' expr
   34     | . expr '*' expr
   35     | . expr '/' expr
   36     | . '~' expr
   37     | . expr '<' expr
   38     | . expr LE expr
   39     | . expr '=' expr
   40     | . NOT expr
   41     | . '(' expr ')'
   42     | . OBJECTID
   43     | . INT_CONST
   44     | . STR_CONST
   45     | . BOOL_CONST

    IF          shift, and go to state 36
    LET         shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    expr  go to state 55


State 39

   21 expr: . OBJECTID ASSIGN expr
   22     | . expr '.' OBJECTID '(' expr_list_comma_sep ')'
   23     | . expr '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   24     | . OBJECTID '(' expr_list_comma_sep ')'
   25     | . IF expr THEN expr ELSE expr FI
   26     | . WHILE expr LOOP expr POOL
   27     | . '{' expr_list_semicolon_sep '}'
   28     | . LET expr_let_body
   29     | . CASE expr OF case_branch_list ESAC
   29     | CASE . expr OF case_branch_list ESAC
   30     | . NEW TYPEID
   31     | . ISVOID expr
   32     | . expr '+' expr
   33     | . expr '-' expr
   34     | . expr '*' expr
   35     | . expr '/' expr
   36     | . '~' expr
   37     | . expr '<' expr
   38     | . expr LE expr
   39     | . expr '=' expr
   40     | . NOT expr
   41     | . '(' expr ')'
   42     | . OBJECTID
   43     | . INT_CONST
   44     | . STR_CONST
   45     | . BOOL_CONST

    IF          shift, and go to state 36
    LET         shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    expr  go to state 56


State 40

   30 expr: NEW . TYPEID

    TYPEID  shift, and go to state 57


State 41

   21 expr: . OBJECTID ASSIGN expr
   22     | . expr '.' OBJECTID '(' expr_list_comma_sep ')'
   23     | . expr '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   24     | . OBJECTID '(' expr_list_comma_sep ')'
   25     | . IF expr THEN expr ELSE expr FI
   26     | . WHILE expr LOOP expr POOL
   27     | . '{' expr_list_semicolon_sep '}'
   28     | . LET expr_let_body
   29     | . CASE expr OF case_branch_list ESAC
   30     | . NEW TYPEID
   31     | . ISVOID expr
   31     | ISVOID . expr
   32     | . expr '+' expr
   33     | . expr '-' expr
   34     | . expr '*' expr
   35     | . expr '/' expr
   36     | . '~' expr
   37     | . expr '<' expr
   38     | . expr LE expr
   39     | . expr '=' expr
   40     | . NOT expr
   41     | . '(' expr ')'
   42     | . OBJECTID
   43     | . INT_CONST
   44     | . STR_CONST
   45     | . BOOL_CONST

    IF          shift, and go to state 36
    LET         shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    expr  go to state 58


State 42

   44 expr: STR_CONST .

    $default  reduce using rule 44 (expr)


State 43

   43 expr: INT_CONST .

    $default  reduce using rule 43 (expr)


State 44

   45 expr: BOOL_CONST .

    $default  reduce using rule 45 (expr)


State 45

   21 expr: OBJECTID . ASSIGN expr
   24     | OBJECTID . '(' expr_list_comma_sep ')'
   42     | OBJECTID .

    ASSIGN  shift, and go to state 59
    '('     shift, and go to state 60

    $default  reduce using rule 42 (expr)


State 46

   21 expr: . OBJECTID ASSIGN expr
   22     | . expr '.' OBJECTID '(' expr_list_comma_sep ')'
   23     | . expr '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   24     | . OBJECTID '(' expr_list_comma_sep ')'
   25     | . IF expr THEN expr ELSE expr FI
   26     | . WHILE expr LOOP expr POOL
   27     | . '{' expr_list_semicolon_sep '}'
   28     | . LET expr_let_body
   29     | . CASE expr OF case_branch_list ESAC
   30     | . NEW TYPEID
   31     | . ISVOID expr
   32     | . expr '+' expr
   33     | . expr '-' expr
   34     | . expr '*' expr
   35     | . expr '/' expr
   36     | . '~' expr
   37     | . expr '<' expr
   38     | . expr LE expr
   39     | . expr '=' expr
   40     | . NOT expr
   40     | NOT . expr
   41     | . '(' expr ')'
   42     | . OBJECTID
   43     | . INT_CONST
   44     | . STR_CONST
   45     | . BOOL_CONST

    IF          shift, and go to state 36
    LET         shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    expr  go to state 61


State 47

   21 expr: . OBJECTID ASSIGN expr
   22     | . expr '.' OBJECTID '(' expr_list_comma_sep ')'
   23     | . expr '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   24     | . OBJECTID '(' expr_list_comma_sep ')'
   25     | . IF expr THEN expr ELSE expr FI
   26     | . WHILE expr LOOP expr POOL
   27     | . '{' expr_list_semicolon_sep '}'
   28     | . LET expr_let_body
   29     | . CASE expr OF case_branch_list ESAC
   30     | . NEW TYPEID
   31     | . ISVOID expr
   32     | . expr '+' expr
   33     | . expr '-' expr
   34     | . expr '*' expr
   35     | . expr '/' expr
   36     | . '~' expr
   36     | '~' . expr
   37     | . expr '<' expr
   38     | . expr LE expr
   39     | . expr '=' expr
   40     | . NOT expr
   41     | . '(' expr ')'
   42     | . OBJECTID
   43     | . INT_CONST
   44     | . STR_CONST
   45     | . BOOL_CONST

    IF          shift, and go to state 36
    LET         shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    expr  go to state 62


State 48

   19 expr_list_semicolon_sep: . expr ';'
   20                        | . expr_list_semicolon_sep expr ';'
   21 expr: . OBJECTID ASSIGN expr
   22     | . expr '.' OBJECTID '(' expr_list_comma_sep ')'
   23     | . expr '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   24     | . OBJECTID '(' expr_list_comma_sep ')'
   25     | . IF expr THEN expr ELSE expr FI
   26     | . WHILE expr LOOP expr POOL
   27     | . '{' expr_list_semicolon_sep '}'
   27     | '{' . expr_list_semicolon_sep '}'
   28     | . LET expr_let_body
   29     | . CASE expr OF case_branch_list ESAC
   30     | . NEW TYPEID
   31     | . ISVOID expr
   32     | . expr '+' expr
   33     | . expr '-' expr
   34     | . expr '*' expr
   35     | . expr '/' expr
   36     | . '~' expr
   37     | . expr '<' expr
   38     | . expr LE expr
   39     | . expr '=' expr
   40     | . NOT expr
   41     | . '(' expr ')'
   42     | . OBJECTID
   43     | . INT_CONST
   44     | . STR_CONST
   45     | . BOOL_CONST

    IF          shift, and go to state 36
    LET         shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    expr_list_semicolon_sep  go to state 63
    expr                     go to state 64


State 49

   21 expr: . OBJECTID ASSIGN expr
   22     | . expr '.' OBJECTID '(' expr_list_comma_sep ')'
   23     | . expr '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   24     | . OBJECTID '(' expr_list_comma_sep ')'
   25     | . IF expr THEN expr ELSE expr FI
   26     | . WHILE expr LOOP expr POOL
   27     | . '{' expr_list_semicolon_sep '}'
   28     | . LET expr_let_body
   29     | . CASE expr OF case_branch_list ESAC
   30     | . NEW TYPEID
   31     | . ISVOID expr
   32     | . expr '+' expr
   33     | . expr '-' expr
   34     | . expr '*' expr
   35     | . expr '/' expr
   36     | . '~' expr
   37     | . expr '<' expr
   38     | . expr LE expr
   39     | . expr '=' expr
   40     | . NOT expr
   41     | . '(' expr ')'
   41     | '(' . expr ')'
   42     | . OBJECTID
   43     | . INT_CONST
   44     | . STR_CONST
   45     | . BOOL_CONST

    IF          shift, and go to state 36
    LET         shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    expr  go to state 65


State 50

   11 feature: OBJECTID ':' TYPEID ASSIGN expr .
   22 expr: expr . '.' OBJECTID '(' expr_list_comma_sep ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   32     | expr . '+' expr
   33     | expr . '-' expr
   34     | expr . '*' expr
   35     | expr . '/' expr
   37     | expr . '<' expr
   38     | expr . LE expr
   39     | expr . '=' expr

    LE   shift, and go to state 66
    '<'  shift, and go to state 67
    '='  shift, and go to state 68
    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '*'  shift, and go to state 71
    '/'  shift, and go to state 72
    '.'  shift, and go to state 73
    '@'  shift, and go to state 74

    $default  reduce using rule 11 (feature)


State 51

    9 feature: OBJECTID '(' formal_list ')' ':' TYPEID . '{' expr '}'

    '{'  shift, and go to state 75


State 52

   22 expr: expr . '.' OBJECTID '(' expr_list_comma_sep ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   25     | IF expr . THEN expr ELSE expr FI
   32     | expr . '+' expr
   33     | expr . '-' expr
   34     | expr . '*' expr
   35     | expr . '/' expr
   37     | expr . '<' expr
   38     | expr . LE expr
   39     | expr . '=' expr

    THEN  shift, and go to state 76
    LE    shift, and go to state 66
    '<'   shift, and go to state 67
    '='   shift, and go to state 68
    '+'   shift, and go to state 69
    '-'   shift, and go to state 70
    '*'   shift, and go to state 71
    '/'   shift, and go to state 72
    '.'   shift, and go to state 73
    '@'   shift, and go to state 74


State 53

   46 expr_let_body: OBJECTID . ':' TYPEID IN expr
   47              | OBJECTID . ':' TYPEID ASSIGN expr IN expr
   48              | OBJECTID . ':' TYPEID ',' expr_let_body
   49              | OBJECTID . ':' TYPEID ASSIGN expr ',' expr_let_body

    ':'  shift, and go to state 77


State 54

   28 expr: LET expr_let_body .

    $default  reduce using rule 28 (expr)


State 55

   22 expr: expr . '.' OBJECTID '(' expr_list_comma_sep ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   26     | WHILE expr . LOOP expr POOL
   32     | expr . '+' expr
   33     | expr . '-' expr
   34     | expr . '*' expr
   35     | expr . '/' expr
   37     | expr . '<' expr
   38     | expr . LE expr
   39     | expr . '=' expr

    LOOP  shift, and go to state 78
    LE    shift, and go to state 66
    '<'   shift, and go to state 67
    '='   shift, and go to state 68
    '+'   shift, and go to state 69
    '-'   shift, and go to state 70
    '*'   shift, and go to state 71
    '/'   shift, and go to state 72
    '.'   shift, and go to state 73
    '@'   shift, and go to state 74


State 56

   22 expr: expr . '.' OBJECTID '(' expr_list_comma_sep ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   29     | CASE expr . OF case_branch_list ESAC
   32     | expr . '+' expr
   33     | expr . '-' expr
   34     | expr . '*' expr
   35     | expr . '/' expr
   37     | expr . '<' expr
   38     | expr . LE expr
   39     | expr . '=' expr

    OF   shift, and go to state 79
    LE   shift, and go to state 66
    '<'  shift, and go to state 67
    '='  shift, and go to state 68
    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '*'  shift, and go to state 71
    '/'  shift, and go to state 72
    '.'  shift, and go to state 73
    '@'  shift, and go to state 74


State 57

   30 expr: NEW TYPEID .

    $default  reduce using rule 30 (expr)


State 58

   22 expr: expr . '.' OBJECTID '(' expr_list_comma_sep ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   31     | ISVOID expr .
   32     | expr . '+' expr
   33     | expr . '-' expr
   34     | expr . '*' expr
   35     | expr . '/' expr
   37     | expr . '<' expr
   38     | expr . LE expr
   39     | expr . '=' expr

    '.'  shift, and go to state 73
    '@'  shift, and go to state 74

    '@'       [reduce using rule 31 (expr)]
    $default  reduce using rule 31 (expr)


State 59

   21 expr: . OBJECTID ASSIGN expr
   21     | OBJECTID ASSIGN . expr
   22     | . expr '.' OBJECTID '(' expr_list_comma_sep ')'
   23     | . expr '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   24     | . OBJECTID '(' expr_list_comma_sep ')'
   25     | . IF expr THEN expr ELSE expr FI
   26     | . WHILE expr LOOP expr POOL
   27     | . '{' expr_list_semicolon_sep '}'
   28     | . LET expr_let_body
   29     | . CASE expr OF case_branch_list ESAC
   30     | . NEW TYPEID
   31     | . ISVOID expr
   32     | . expr '+' expr
   33     | . expr '-' expr
   34     | . expr '*' expr
   35     | . expr '/' expr
   36     | . '~' expr
   37     | . expr '<' expr
   38     | . expr LE expr
   39     | . expr '=' expr
   40     | . NOT expr
   41     | . '(' expr ')'
   42     | . OBJECTID
   43     | . INT_CONST
   44     | . STR_CONST
   45     | . BOOL_CONST

    IF          shift, and go to state 36
    LET         shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    expr  go to state 80


State 60

   16 expr_list_comma_sep: . %empty
   17                    | . expr
   18                    | . expr_list_comma_sep ',' expr
   21 expr: . OBJECTID ASSIGN expr
   22     | . expr '.' OBJECTID '(' expr_list_comma_sep ')'
   23     | . expr '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   24     | . OBJECTID '(' expr_list_comma_sep ')'
   24     | OBJECTID '(' . expr_list_comma_sep ')'
   25     | . IF expr THEN expr ELSE expr FI
   26     | . WHILE expr LOOP expr POOL
   27     | . '{' expr_list_semicolon_sep '}'
   28     | . LET expr_let_body
   29     | . CASE expr OF case_branch_list ESAC
   30     | . NEW TYPEID
   31     | . ISVOID expr
   32     | . expr '+' expr
   33     | . expr '-' expr
   34     | . expr '*' expr
   35     | . expr '/' expr
   36     | . '~' expr
   37     | . expr '<' expr
   38     | . expr LE expr
   39     | . expr '=' expr
   40     | . NOT expr
   41     | . '(' expr ')'
   42     | . OBJECTID
   43     | . INT_CONST
   44     | . STR_CONST
   45     | . BOOL_CONST

    IF          shift, and go to state 36
    LET         shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    $default  reduce using rule 16 (expr_list_comma_sep)

    expr_list_comma_sep  go to state 81
    expr                 go to state 82


State 61

   22 expr: expr . '.' OBJECTID '(' expr_list_comma_sep ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   32     | expr . '+' expr
   33     | expr . '-' expr
   34     | expr . '*' expr
   35     | expr . '/' expr
   37     | expr . '<' expr
   38     | expr . LE expr
   39     | expr . '=' expr
   40     | NOT expr .

    LE   shift, and go to state 66
    '<'  shift, and go to state 67
    '='  shift, and go to state 68
    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '*'  shift, and go to state 71
    '/'  shift, and go to state 72
    '.'  shift, and go to state 73
    '@'  shift, and go to state 74

    '@'       [reduce using rule 40 (expr)]
    $default  reduce using rule 40 (expr)


State 62

   22 expr: expr . '.' OBJECTID '(' expr_list_comma_sep ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   32     | expr . '+' expr
   33     | expr . '-' expr
   34     | expr . '*' expr
   35     | expr . '/' expr
   36     | '~' expr .
   37     | expr . '<' expr
   38     | expr . LE expr
   39     | expr . '=' expr

    '.'  shift, and go to state 73
    '@'  shift, and go to state 74

    '@'       [reduce using rule 36 (expr)]
    $default  reduce using rule 36 (expr)


State 63

   20 expr_list_semicolon_sep: expr_list_semicolon_sep . expr ';'
   21 expr: . OBJECTID ASSIGN expr
   22     | . expr '.' OBJECTID '(' expr_list_comma_sep ')'
   23     | . expr '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   24     | . OBJECTID '(' expr_list_comma_sep ')'
   25     | . IF expr THEN expr ELSE expr FI
   26     | . WHILE expr LOOP expr POOL
   27     | . '{' expr_list_semicolon_sep '}'
   27     | '{' expr_list_semicolon_sep . '}'
   28     | . LET expr_let_body
   29     | . CASE expr OF case_branch_list ESAC
   30     | . NEW TYPEID
   31     | . ISVOID expr
   32     | . expr '+' expr
   33     | . expr '-' expr
   34     | . expr '*' expr
   35     | . expr '/' expr
   36     | . '~' expr
   37     | . expr '<' expr
   38     | . expr LE expr
   39     | . expr '=' expr
   40     | . NOT expr
   41     | . '(' expr ')'
   42     | . OBJECTID
   43     | . INT_CONST
   44     | . STR_CONST
   45     | . BOOL_CONST

    IF          shift, and go to state 36
    LET         shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '}'         shift, and go to state 83
    '('         shift, and go to state 49

    expr  go to state 84


State 64

   19 expr_list_semicolon_sep: expr . ';'
   22 expr: expr . '.' OBJECTID '(' expr_list_comma_sep ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   32     | expr . '+' expr
   33     | expr . '-' expr
   34     | expr . '*' expr
   35     | expr . '/' expr
   37     | expr . '<' expr
   38     | expr . LE expr
   39     | expr . '=' expr

    LE   shift, and go to state 66
    '<'  shift, and go to state 67
    '='  shift, and go to state 68
    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '*'  shift, and go to state 71
    '/'  shift, and go to state 72
    '.'  shift, and go to state 73
    ';'  shift, and go to state 85
    '@'  shift, and go to state 74


State 65

   22 expr: expr . '.' OBJECTID '(' expr_list_comma_sep ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   32     | expr . '+' expr
   33     | expr . '-' expr
   34     | expr . '*' expr
   35     | expr . '/' expr
   37     | expr . '<' expr
   38     | expr . LE expr
   39     | expr . '=' expr
   41     | '(' expr . ')'

    LE   shift, and go to state 66
    '<'  shift, and go to state 67
    '='  shift, and go to state 68
    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '*'  shift, and go to state 71
    '/'  shift, and go to state 72
    '.'  shift, and go to state 73
    ')'  shift, and go to state 86
    '@'  shift, and go to state 74


State 66

   21 expr: . OBJECTID ASSIGN expr
   22     | . expr '.' OBJECTID '(' expr_list_comma_sep ')'
   23     | . expr '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   24     | . OBJECTID '(' expr_list_comma_sep ')'
   25     | . IF expr THEN expr ELSE expr FI
   26     | . WHILE expr LOOP expr POOL
   27     | . '{' expr_list_semicolon_sep '}'
   28     | . LET expr_let_body
   29     | . CASE expr OF case_branch_list ESAC
   30     | . NEW TYPEID
   31     | . ISVOID expr
   32     | . expr '+' expr
   33     | . expr '-' expr
   34     | . expr '*' expr
   35     | . expr '/' expr
   36     | . '~' expr
   37     | . expr '<' expr
   38     | . expr LE expr
   38     | expr LE . expr
   39     | . expr '=' expr
   40     | . NOT expr
   41     | . '(' expr ')'
   42     | . OBJECTID
   43     | . INT_CONST
   44     | . STR_CONST
   45     | . BOOL_CONST

    IF          shift, and go to state 36
    LET         shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    expr  go to state 87


State 67

   21 expr: . OBJECTID ASSIGN expr
   22     | . expr '.' OBJECTID '(' expr_list_comma_sep ')'
   23     | . expr '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   24     | . OBJECTID '(' expr_list_comma_sep ')'
   25     | . IF expr THEN expr ELSE expr FI
   26     | . WHILE expr LOOP expr POOL
   27     | . '{' expr_list_semicolon_sep '}'
   28     | . LET expr_let_body
   29     | . CASE expr OF case_branch_list ESAC
   30     | . NEW TYPEID
   31     | . ISVOID expr
   32     | . expr '+' expr
   33     | . expr '-' expr
   34     | . expr '*' expr
   35     | . expr '/' expr
   36     | . '~' expr
   37     | . expr '<' expr
   37     | expr '<' . expr
   38     | . expr LE expr
   39     | . expr '=' expr
   40     | . NOT expr
   41     | . '(' expr ')'
   42     | . OBJECTID
   43     | . INT_CONST
   44     | . STR_CONST
   45     | . BOOL_CONST

    IF          shift, and go to state 36
    LET         shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    expr  go to state 88


State 68

   21 expr: . OBJECTID ASSIGN expr
   22     | . expr '.' OBJECTID '(' expr_list_comma_sep ')'
   23     | . expr '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   24     | . OBJECTID '(' expr_list_comma_sep ')'
   25     | . IF expr THEN expr ELSE expr FI
   26     | . WHILE expr LOOP expr POOL
   27     | . '{' expr_list_semicolon_sep '}'
   28     | . LET expr_let_body
   29     | . CASE expr OF case_branch_list ESAC
   30     | . NEW TYPEID
   31     | . ISVOID expr
   32     | . expr '+' expr
   33     | . expr '-' expr
   34     | . expr '*' expr
   35     | . expr '/' expr
   36     | . '~' expr
   37     | . expr '<' expr
   38     | . expr LE expr
   39     | . expr '=' expr
   39     | expr '=' . expr
   40     | . NOT expr
   41     | . '(' expr ')'
   42     | . OBJECTID
   43     | . INT_CONST
   44     | . STR_CONST
   45     | . BOOL_CONST

    IF          shift, and go to state 36
    LET         shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    expr  go to state 89


State 69

   21 expr: . OBJECTID ASSIGN expr
   22     | . expr '.' OBJECTID '(' expr_list_comma_sep ')'
   23     | . expr '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   24     | . OBJECTID '(' expr_list_comma_sep ')'
   25     | . IF expr THEN expr ELSE expr FI
   26     | . WHILE expr LOOP expr POOL
   27     | . '{' expr_list_semicolon_sep '}'
   28     | . LET expr_let_body
   29     | . CASE expr OF case_branch_list ESAC
   30     | . NEW TYPEID
   31     | . ISVOID expr
   32     | . expr '+' expr
   32     | expr '+' . expr
   33     | . expr '-' expr
   34     | . expr '*' expr
   35     | . expr '/' expr
   36     | . '~' expr
   37     | . expr '<' expr
   38     | . expr LE expr
   39     | . expr '=' expr
   40     | . NOT expr
   41     | . '(' expr ')'
   42     | . OBJECTID
   43     | . INT_CONST
   44     | . STR_CONST
   45     | . BOOL_CONST

    IF          shift, and go to state 36
    LET         shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    expr  go to state 90


State 70

   21 expr: . OBJECTID ASSIGN expr
   22     | . expr '.' OBJECTID '(' expr_list_comma_sep ')'
   23     | . expr '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   24     | . OBJECTID '(' expr_list_comma_sep ')'
   25     | . IF expr THEN expr ELSE expr FI
   26     | . WHILE expr LOOP expr POOL
   27     | . '{' expr_list_semicolon_sep '}'
   28     | . LET expr_let_body
   29     | . CASE expr OF case_branch_list ESAC
   30     | . NEW TYPEID
   31     | . ISVOID expr
   32     | . expr '+' expr
   33     | . expr '-' expr
   33     | expr '-' . expr
   34     | . expr '*' expr
   35     | . expr '/' expr
   36     | . '~' expr
   37     | . expr '<' expr
   38     | . expr LE expr
   39     | . expr '=' expr
   40     | . NOT expr
   41     | . '(' expr ')'
   42     | . OBJECTID
   43     | . INT_CONST
   44     | . STR_CONST
   45     | . BOOL_CONST

    IF          shift, and go to state 36
    LET         shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    expr  go to state 91


State 71

   21 expr: . OBJECTID ASSIGN expr
   22     | . expr '.' OBJECTID '(' expr_list_comma_sep ')'
   23     | . expr '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   24     | . OBJECTID '(' expr_list_comma_sep ')'
   25     | . IF expr THEN expr ELSE expr FI
   26     | . WHILE expr LOOP expr POOL
   27     | . '{' expr_list_semicolon_sep '}'
   28     | . LET expr_let_body
   29     | . CASE expr OF case_branch_list ESAC
   30     | . NEW TYPEID
   31     | . ISVOID expr
   32     | . expr '+' expr
   33     | . expr '-' expr
   34     | . expr '*' expr
   34     | expr '*' . expr
   35     | . expr '/' expr
   36     | . '~' expr
   37     | . expr '<' expr
   38     | . expr LE expr
   39     | . expr '=' expr
   40     | . NOT expr
   41     | . '(' expr ')'
   42     | . OBJECTID
   43     | . INT_CONST
   44     | . STR_CONST
   45     | . BOOL_CONST

    IF          shift, and go to state 36
    LET         shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    expr  go to state 92


State 72

   21 expr: . OBJECTID ASSIGN expr
   22     | . expr '.' OBJECTID '(' expr_list_comma_sep ')'
   23     | . expr '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   24     | . OBJECTID '(' expr_list_comma_sep ')'
   25     | . IF expr THEN expr ELSE expr FI
   26     | . WHILE expr LOOP expr POOL
   27     | . '{' expr_list_semicolon_sep '}'
   28     | . LET expr_let_body
   29     | . CASE expr OF case_branch_list ESAC
   30     | . NEW TYPEID
   31     | . ISVOID expr
   32     | . expr '+' expr
   33     | . expr '-' expr
   34     | . expr '*' expr
   35     | . expr '/' expr
   35     | expr '/' . expr
   36     | . '~' expr
   37     | . expr '<' expr
   38     | . expr LE expr
   39     | . expr '=' expr
   40     | . NOT expr
   41     | . '(' expr ')'
   42     | . OBJECTID
   43     | . INT_CONST
   44     | . STR_CONST
   45     | . BOOL_CONST

    IF          shift, and go to state 36
    LET         shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    expr  go to state 93


State 73

   22 expr: expr '.' . OBJECTID '(' expr_list_comma_sep ')'

    OBJECTID  shift, and go to state 94


State 74

   23 expr: expr '@' . TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'

    TYPEID  shift, and go to state 95


State 75

    9 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' . expr '}'
   21 expr: . OBJECTID ASSIGN expr
   22     | . expr '.' OBJECTID '(' expr_list_comma_sep ')'
   23     | . expr '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   24     | . OBJECTID '(' expr_list_comma_sep ')'
   25     | . IF expr THEN expr ELSE expr FI
   26     | . WHILE expr LOOP expr POOL
   27     | . '{' expr_list_semicolon_sep '}'
   28     | . LET expr_let_body
   29     | . CASE expr OF case_branch_list ESAC
   30     | . NEW TYPEID
   31     | . ISVOID expr
   32     | . expr '+' expr
   33     | . expr '-' expr
   34     | . expr '*' expr
   35     | . expr '/' expr
   36     | . '~' expr
   37     | . expr '<' expr
   38     | . expr LE expr
   39     | . expr '=' expr
   40     | . NOT expr
   41     | . '(' expr ')'
   42     | . OBJECTID
   43     | . INT_CONST
   44     | . STR_CONST
   45     | . BOOL_CONST

    IF          shift, and go to state 36
    LET         shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    expr  go to state 96


State 76

   21 expr: . OBJECTID ASSIGN expr
   22     | . expr '.' OBJECTID '(' expr_list_comma_sep ')'
   23     | . expr '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   24     | . OBJECTID '(' expr_list_comma_sep ')'
   25     | . IF expr THEN expr ELSE expr FI
   25     | IF expr THEN . expr ELSE expr FI
   26     | . WHILE expr LOOP expr POOL
   27     | . '{' expr_list_semicolon_sep '}'
   28     | . LET expr_let_body
   29     | . CASE expr OF case_branch_list ESAC
   30     | . NEW TYPEID
   31     | . ISVOID expr
   32     | . expr '+' expr
   33     | . expr '-' expr
   34     | . expr '*' expr
   35     | . expr '/' expr
   36     | . '~' expr
   37     | . expr '<' expr
   38     | . expr LE expr
   39     | . expr '=' expr
   40     | . NOT expr
   41     | . '(' expr ')'
   42     | . OBJECTID
   43     | . INT_CONST
   44     | . STR_CONST
   45     | . BOOL_CONST

    IF          shift, and go to state 36
    LET         shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    expr  go to state 97


State 77

   46 expr_let_body: OBJECTID ':' . TYPEID IN expr
   47              | OBJECTID ':' . TYPEID ASSIGN expr IN expr
   48              | OBJECTID ':' . TYPEID ',' expr_let_body
   49              | OBJECTID ':' . TYPEID ASSIGN expr ',' expr_let_body

    TYPEID  shift, and go to state 98


State 78

   21 expr: . OBJECTID ASSIGN expr
   22     | . expr '.' OBJECTID '(' expr_list_comma_sep ')'
   23     | . expr '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   24     | . OBJECTID '(' expr_list_comma_sep ')'
   25     | . IF expr THEN expr ELSE expr FI
   26     | . WHILE expr LOOP expr POOL
   26     | WHILE expr LOOP . expr POOL
   27     | . '{' expr_list_semicolon_sep '}'
   28     | . LET expr_let_body
   29     | . CASE expr OF case_branch_list ESAC
   30     | . NEW TYPEID
   31     | . ISVOID expr
   32     | . expr '+' expr
   33     | . expr '-' expr
   34     | . expr '*' expr
   35     | . expr '/' expr
   36     | . '~' expr
   37     | . expr '<' expr
   38     | . expr LE expr
   39     | . expr '=' expr
   40     | . NOT expr
   41     | . '(' expr ')'
   42     | . OBJECTID
   43     | . INT_CONST
   44     | . STR_CONST
   45     | . BOOL_CONST

    IF          shift, and go to state 36
    LET         shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    expr  go to state 99


State 79

   29 expr: CASE expr OF . case_branch_list ESAC
   50 case_branch_list: . case_ ';'
   51                 | . case_branch_list case_ ';'
   52 case_: . OBJECTID ':' TYPEID DARROW expr

    OBJECTID  shift, and go to state 100

    case_branch_list  go to state 101
    case_             go to state 102


State 80

   21 expr: OBJECTID ASSIGN expr .
   22     | expr . '.' OBJECTID '(' expr_list_comma_sep ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   32     | expr . '+' expr
   33     | expr . '-' expr
   34     | expr . '*' expr
   35     | expr . '/' expr
   37     | expr . '<' expr
   38     | expr . LE expr
   39     | expr . '=' expr

    LE   shift, and go to state 66
    '<'  shift, and go to state 67
    '='  shift, and go to state 68
    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '*'  shift, and go to state 71
    '/'  shift, and go to state 72
    '.'  shift, and go to state 73
    '@'  shift, and go to state 74

    '@'       [reduce using rule 21 (expr)]
    $default  reduce using rule 21 (expr)


State 81

   18 expr_list_comma_sep: expr_list_comma_sep . ',' expr
   24 expr: OBJECTID '(' expr_list_comma_sep . ')'

    ')'  shift, and go to state 103
    ','  shift, and go to state 104


State 82

   17 expr_list_comma_sep: expr .
   22 expr: expr . '.' OBJECTID '(' expr_list_comma_sep ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   32     | expr . '+' expr
   33     | expr . '-' expr
   34     | expr . '*' expr
   35     | expr . '/' expr
   37     | expr . '<' expr
   38     | expr . LE expr
   39     | expr . '=' expr

    LE   shift, and go to state 66
    '<'  shift, and go to state 67
    '='  shift, and go to state 68
    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '*'  shift, and go to state 71
    '/'  shift, and go to state 72
    '.'  shift, and go to state 73
    '@'  shift, and go to state 74

    $default  reduce using rule 17 (expr_list_comma_sep)


State 83

   27 expr: '{' expr_list_semicolon_sep '}' .

    $default  reduce using rule 27 (expr)


State 84

   20 expr_list_semicolon_sep: expr_list_semicolon_sep expr . ';'
   22 expr: expr . '.' OBJECTID '(' expr_list_comma_sep ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   32     | expr . '+' expr
   33     | expr . '-' expr
   34     | expr . '*' expr
   35     | expr . '/' expr
   37     | expr . '<' expr
   38     | expr . LE expr
   39     | expr . '=' expr

    LE   shift, and go to state 66
    '<'  shift, and go to state 67
    '='  shift, and go to state 68
    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '*'  shift, and go to state 71
    '/'  shift, and go to state 72
    '.'  shift, and go to state 73
    ';'  shift, and go to state 105
    '@'  shift, and go to state 74


State 85

   19 expr_list_semicolon_sep: expr ';' .

    $default  reduce using rule 19 (expr_list_semicolon_sep)


State 86

   41 expr: '(' expr ')' .

    $default  reduce using rule 41 (expr)


State 87

   22 expr: expr . '.' OBJECTID '(' expr_list_comma_sep ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   32     | expr . '+' expr
   33     | expr . '-' expr
   34     | expr . '*' expr
   35     | expr . '/' expr
   37     | expr . '<' expr
   38     | expr . LE expr
   38     | expr LE expr .
   39     | expr . '=' expr

    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '*'  shift, and go to state 71
    '/'  shift, and go to state 72
    '.'  shift, and go to state 73
    '@'  shift, and go to state 74

    LE   error (nonassociative)
    '<'  error (nonassociative)
    '='  error (nonassociative)

    '@'       [reduce using rule 38 (expr)]
    $default  reduce using rule 38 (expr)


State 88

   22 expr: expr . '.' OBJECTID '(' expr_list_comma_sep ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   32     | expr . '+' expr
   33     | expr . '-' expr
   34     | expr . '*' expr
   35     | expr . '/' expr
   37     | expr . '<' expr
   37     | expr '<' expr .
   38     | expr . LE expr
   39     | expr . '=' expr

    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '*'  shift, and go to state 71
    '/'  shift, and go to state 72
    '.'  shift, and go to state 73
    '@'  shift, and go to state 74

    LE   error (nonassociative)
    '<'  error (nonassociative)
    '='  error (nonassociative)

    '@'       [reduce using rule 37 (expr)]
    $default  reduce using rule 37 (expr)


State 89

   22 expr: expr . '.' OBJECTID '(' expr_list_comma_sep ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   32     | expr . '+' expr
   33     | expr . '-' expr
   34     | expr . '*' expr
   35     | expr . '/' expr
   37     | expr . '<' expr
   38     | expr . LE expr
   39     | expr . '=' expr
   39     | expr '=' expr .

    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '*'  shift, and go to state 71
    '/'  shift, and go to state 72
    '.'  shift, and go to state 73
    '@'  shift, and go to state 74

    LE   error (nonassociative)
    '<'  error (nonassociative)
    '='  error (nonassociative)

    '@'       [reduce using rule 39 (expr)]
    $default  reduce using rule 39 (expr)


State 90

   22 expr: expr . '.' OBJECTID '(' expr_list_comma_sep ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   32     | expr . '+' expr
   32     | expr '+' expr .
   33     | expr . '-' expr
   34     | expr . '*' expr
   35     | expr . '/' expr
   37     | expr . '<' expr
   38     | expr . LE expr
   39     | expr . '=' expr

    '*'  shift, and go to state 71
    '/'  shift, and go to state 72
    '.'  shift, and go to state 73
    '@'  shift, and go to state 74

    '@'       [reduce using rule 32 (expr)]
    $default  reduce using rule 32 (expr)


State 91

   22 expr: expr . '.' OBJECTID '(' expr_list_comma_sep ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   32     | expr . '+' expr
   33     | expr . '-' expr
   33     | expr '-' expr .
   34     | expr . '*' expr
   35     | expr . '/' expr
   37     | expr . '<' expr
   38     | expr . LE expr
   39     | expr . '=' expr

    '*'  shift, and go to state 71
    '/'  shift, and go to state 72
    '.'  shift, and go to state 73
    '@'  shift, and go to state 74

    '@'       [reduce using rule 33 (expr)]
    $default  reduce using rule 33 (expr)


State 92

   22 expr: expr . '.' OBJECTID '(' expr_list_comma_sep ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   32     | expr . '+' expr
   33     | expr . '-' expr
   34     | expr . '*' expr
   34     | expr '*' expr .
   35     | expr . '/' expr
   37     | expr . '<' expr
   38     | expr . LE expr
   39     | expr . '=' expr

    '.'  shift, and go to state 73
    '@'  shift, and go to state 74

    '@'       [reduce using rule 34 (expr)]
    $default  reduce using rule 34 (expr)


State 93

   22 expr: expr . '.' OBJECTID '(' expr_list_comma_sep ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   32     | expr . '+' expr
   33     | expr . '-' expr
   34     | expr . '*' expr
   35     | expr . '/' expr
   35     | expr '/' expr .
   37     | expr . '<' expr
   38     | expr . LE expr
   39     | expr . '=' expr

    '.'  shift, and go to state 73
    '@'  shift, and go to state 74

    '@'       [reduce using rule 35 (expr)]
    $default  reduce using rule 35 (expr)


State 94

   22 expr: expr '.' OBJECTID . '(' expr_list_comma_sep ')'

    '('  shift, and go to state 106


State 95

   23 expr: expr '@' TYPEID . '.' OBJECTID '(' expr_list_comma_sep ')'

    '.'  shift, and go to state 107


State 96

    9 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' expr . '}'
   22 expr: expr . '.' OBJECTID '(' expr_list_comma_sep ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   32     | expr . '+' expr
   33     | expr . '-' expr
   34     | expr . '*' expr
   35     | expr . '/' expr
   37     | expr . '<' expr
   38     | expr . LE expr
   39     | expr . '=' expr

    LE   shift, and go to state 66
    '<'  shift, and go to state 67
    '='  shift, and go to state 68
    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '*'  shift, and go to state 71
    '/'  shift, and go to state 72
    '.'  shift, and go to state 73
    '}'  shift, and go to state 108
    '@'  shift, and go to state 74


State 97

   22 expr: expr . '.' OBJECTID '(' expr_list_comma_sep ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   25     | IF expr THEN expr . ELSE expr FI
   32     | expr . '+' expr
   33     | expr . '-' expr
   34     | expr . '*' expr
   35     | expr . '/' expr
   37     | expr . '<' expr
   38     | expr . LE expr
   39     | expr . '=' expr

    ELSE  shift, and go to state 109
    LE    shift, and go to state 66
    '<'   shift, and go to state 67
    '='   shift, and go to state 68
    '+'   shift, and go to state 69
    '-'   shift, and go to state 70
    '*'   shift, and go to state 71
    '/'   shift, and go to state 72
    '.'   shift, and go to state 73
    '@'   shift, and go to state 74


State 98

   46 expr_let_body: OBJECTID ':' TYPEID . IN expr
   47              | OBJECTID ':' TYPEID . ASSIGN expr IN expr
   48              | OBJECTID ':' TYPEID . ',' expr_let_body
   49              | OBJECTID ':' TYPEID . ASSIGN expr ',' expr_let_body

    IN      shift, and go to state 110
    ASSIGN  shift, and go to state 111
    ','     shift, and go to state 112


State 99

   22 expr: expr . '.' OBJECTID '(' expr_list_comma_sep ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   26     | WHILE expr LOOP expr . POOL
   32     | expr . '+' expr
   33     | expr . '-' expr
   34     | expr . '*' expr
   35     | expr . '/' expr
   37     | expr . '<' expr
   38     | expr . LE expr
   39     | expr . '=' expr

    POOL  shift, and go to state 113
    LE    shift, and go to state 66
    '<'   shift, and go to state 67
    '='   shift, and go to state 68
    '+'   shift, and go to state 69
    '-'   shift, and go to state 70
    '*'   shift, and go to state 71
    '/'   shift, and go to state 72
    '.'   shift, and go to state 73
    '@'   shift, and go to state 74


State 100

   52 case_: OBJECTID . ':' TYPEID DARROW expr

    ':'  shift, and go to state 114


State 101

   29 expr: CASE expr OF case_branch_list . ESAC
   51 case_branch_list: case_branch_list . case_ ';'
   52 case_: . OBJECTID ':' TYPEID DARROW expr

    ESAC      shift, and go to state 115
    OBJECTID  shift, and go to state 100

    case_  go to state 116


State 102

   50 case_branch_list: case_ . ';'

    ';'  shift, and go to state 117


State 103

   24 expr: OBJECTID '(' expr_list_comma_sep ')' .

    $default  reduce using rule 24 (expr)


State 104

   18 expr_list_comma_sep: expr_list_comma_sep ',' . expr
   21 expr: . OBJECTID ASSIGN expr
   22     | . expr '.' OBJECTID '(' expr_list_comma_sep ')'
   23     | . expr '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   24     | . OBJECTID '(' expr_list_comma_sep ')'
   25     | . IF expr THEN expr ELSE expr FI
   26     | . WHILE expr LOOP expr POOL
   27     | . '{' expr_list_semicolon_sep '}'
   28     | . LET expr_let_body
   29     | . CASE expr OF case_branch_list ESAC
   30     | . NEW TYPEID
   31     | . ISVOID expr
   32     | . expr '+' expr
   33     | . expr '-' expr
   34     | . expr '*' expr
   35     | . expr '/' expr
   36     | . '~' expr
   37     | . expr '<' expr
   38     | . expr LE expr
   39     | . expr '=' expr
   40     | . NOT expr
   41     | . '(' expr ')'
   42     | . OBJECTID
   43     | . INT_CONST
   44     | . STR_CONST
   45     | . BOOL_CONST

    IF          shift, and go to state 36
    LET         shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    expr  go to state 118


State 105

   20 expr_list_semicolon_sep: expr_list_semicolon_sep expr ';' .

    $default  reduce using rule 20 (expr_list_semicolon_sep)


State 106

   16 expr_list_comma_sep: . %empty
   17                    | . expr
   18                    | . expr_list_comma_sep ',' expr
   21 expr: . OBJECTID ASSIGN expr
   22     | . expr '.' OBJECTID '(' expr_list_comma_sep ')'
   22     | expr '.' OBJECTID '(' . expr_list_comma_sep ')'
   23     | . expr '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   24     | . OBJECTID '(' expr_list_comma_sep ')'
   25     | . IF expr THEN expr ELSE expr FI
   26     | . WHILE expr LOOP expr POOL
   27     | . '{' expr_list_semicolon_sep '}'
   28     | . LET expr_let_body
   29     | . CASE expr OF case_branch_list ESAC
   30     | . NEW TYPEID
   31     | . ISVOID expr
   32     | . expr '+' expr
   33     | . expr '-' expr
   34     | . expr '*' expr
   35     | . expr '/' expr
   36     | . '~' expr
   37     | . expr '<' expr
   38     | . expr LE expr
   39     | . expr '=' expr
   40     | . NOT expr
   41     | . '(' expr ')'
   42     | . OBJECTID
   43     | . INT_CONST
   44     | . STR_CONST
   45     | . BOOL_CONST

    IF          shift, and go to state 36
    LET         shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    $default  reduce using rule 16 (expr_list_comma_sep)

    expr_list_comma_sep  go to state 119
    expr                 go to state 82


State 107

   23 expr: expr '@' TYPEID '.' . OBJECTID '(' expr_list_comma_sep ')'

    OBJECTID  shift, and go to state 120


State 108

    9 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' expr '}' .

    $default  reduce using rule 9 (feature)


State 109

   21 expr: . OBJECTID ASSIGN expr
   22     | . expr '.' OBJECTID '(' expr_list_comma_sep ')'
   23     | . expr '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   24     | . OBJECTID '(' expr_list_comma_sep ')'
   25     | . IF expr THEN expr ELSE expr FI
   25     | IF expr THEN expr ELSE . expr FI
   26     | . WHILE expr LOOP expr POOL
   27     | . '{' expr_list_semicolon_sep '}'
   28     | . LET expr_let_body
   29     | . CASE expr OF case_branch_list ESAC
   30     | . NEW TYPEID
   31     | . ISVOID expr
   32     | . expr '+' expr
   33     | . expr '-' expr
   34     | . expr '*' expr
   35     | . expr '/' expr
   36     | . '~' expr
   37     | . expr '<' expr
   38     | . expr LE expr
   39     | . expr '=' expr
   40     | . NOT expr
   41     | . '(' expr ')'
   42     | . OBJECTID
   43     | . INT_CONST
   44     | . STR_CONST
   45     | . BOOL_CONST

    IF          shift, and go to state 36
    LET         shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    expr  go to state 121


State 110

   21 expr: . OBJECTID ASSIGN expr
   22     | . expr '.' OBJECTID '(' expr_list_comma_sep ')'
   23     | . expr '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   24     | . OBJECTID '(' expr_list_comma_sep ')'
   25     | . IF expr THEN expr ELSE expr FI
   26     | . WHILE expr LOOP expr POOL
   27     | . '{' expr_list_semicolon_sep '}'
   28     | . LET expr_let_body
   29     | . CASE expr OF case_branch_list ESAC
   30     | . NEW TYPEID
   31     | . ISVOID expr
   32     | . expr '+' expr
   33     | . expr '-' expr
   34     | . expr '*' expr
   35     | . expr '/' expr
   36     | . '~' expr
   37     | . expr '<' expr
   38     | . expr LE expr
   39     | . expr '=' expr
   40     | . NOT expr
   41     | . '(' expr ')'
   42     | . OBJECTID
   43     | . INT_CONST
   44     | . STR_CONST
   45     | . BOOL_CONST
   46 expr_let_body: OBJECTID ':' TYPEID IN . expr

    IF          shift, and go to state 36
    LET         shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    expr  go to state 122


State 111

   21 expr: . OBJECTID ASSIGN expr
   22     | . expr '.' OBJECTID '(' expr_list_comma_sep ')'
   23     | . expr '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   24     | . OBJECTID '(' expr_list_comma_sep ')'
   25     | . IF expr THEN expr ELSE expr FI
   26     | . WHILE expr LOOP expr POOL
   27     | . '{' expr_list_semicolon_sep '}'
   28     | . LET expr_let_body
   29     | . CASE expr OF case_branch_list ESAC
   30     | . NEW TYPEID
   31     | . ISVOID expr
   32     | . expr '+' expr
   33     | . expr '-' expr
   34     | . expr '*' expr
   35     | . expr '/' expr
   36     | . '~' expr
   37     | . expr '<' expr
   38     | . expr LE expr
   39     | . expr '=' expr
   40     | . NOT expr
   41     | . '(' expr ')'
   42     | . OBJECTID
   43     | . INT_CONST
   44     | . STR_CONST
   45     | . BOOL_CONST
   47 expr_let_body: OBJECTID ':' TYPEID ASSIGN . expr IN expr
   49              | OBJECTID ':' TYPEID ASSIGN . expr ',' expr_let_body

    IF          shift, and go to state 36
    LET         shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    expr  go to state 123


State 112

   46 expr_let_body: . OBJECTID ':' TYPEID IN expr
   47              | . OBJECTID ':' TYPEID ASSIGN expr IN expr
   48              | . OBJECTID ':' TYPEID ',' expr_let_body
   48              | OBJECTID ':' TYPEID ',' . expr_let_body
   49              | . OBJECTID ':' TYPEID ASSIGN expr ',' expr_let_body

    OBJECTID  shift, and go to state 53

    expr_let_body  go to state 124


State 113

   26 expr: WHILE expr LOOP expr POOL .

    $default  reduce using rule 26 (expr)


State 114

   52 case_: OBJECTID ':' . TYPEID DARROW expr

    TYPEID  shift, and go to state 125


State 115

   29 expr: CASE expr OF case_branch_list ESAC .

    $default  reduce using rule 29 (expr)


State 116

   51 case_branch_list: case_branch_list case_ . ';'

    ';'  shift, and go to state 126


State 117

   50 case_branch_list: case_ ';' .

    $default  reduce using rule 50 (case_branch_list)


State 118

   18 expr_list_comma_sep: expr_list_comma_sep ',' expr .
   22 expr: expr . '.' OBJECTID '(' expr_list_comma_sep ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   32     | expr . '+' expr
   33     | expr . '-' expr
   34     | expr . '*' expr
   35     | expr . '/' expr
   37     | expr . '<' expr
   38     | expr . LE expr
   39     | expr . '=' expr

    LE   shift, and go to state 66
    '<'  shift, and go to state 67
    '='  shift, and go to state 68
    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '*'  shift, and go to state 71
    '/'  shift, and go to state 72
    '.'  shift, and go to state 73
    '@'  shift, and go to state 74

    $default  reduce using rule 18 (expr_list_comma_sep)


State 119

   18 expr_list_comma_sep: expr_list_comma_sep . ',' expr
   22 expr: expr '.' OBJECTID '(' expr_list_comma_sep . ')'

    ')'  shift, and go to state 127
    ','  shift, and go to state 104


State 120

   23 expr: expr '@' TYPEID '.' OBJECTID . '(' expr_list_comma_sep ')'

    '('  shift, and go to state 128


State 121

   22 expr: expr . '.' OBJECTID '(' expr_list_comma_sep ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   25     | IF expr THEN expr ELSE expr . FI
   32     | expr . '+' expr
   33     | expr . '-' expr
   34     | expr . '*' expr
   35     | expr . '/' expr
   37     | expr . '<' expr
   38     | expr . LE expr
   39     | expr . '=' expr

    FI   shift, and go to state 129
    LE   shift, and go to state 66
    '<'  shift, and go to state 67
    '='  shift, and go to state 68
    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '*'  shift, and go to state 71
    '/'  shift, and go to state 72
    '.'  shift, and go to state 73
    '@'  shift, and go to state 74


State 122

   22 expr: expr . '.' OBJECTID '(' expr_list_comma_sep ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   32     | expr . '+' expr
   33     | expr . '-' expr
   34     | expr . '*' expr
   35     | expr . '/' expr
   37     | expr . '<' expr
   38     | expr . LE expr
   39     | expr . '=' expr
   46 expr_let_body: OBJECTID ':' TYPEID IN expr .

    LE   shift, and go to state 66
    '<'  shift, and go to state 67
    '='  shift, and go to state 68
    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '*'  shift, and go to state 71
    '/'  shift, and go to state 72
    '.'  shift, and go to state 73
    '@'  shift, and go to state 74

    LE        [reduce using rule 46 (expr_let_body)]
    '<'       [reduce using rule 46 (expr_let_body)]
    '='       [reduce using rule 46 (expr_let_body)]
    '+'       [reduce using rule 46 (expr_let_body)]
    '-'       [reduce using rule 46 (expr_let_body)]
    '*'       [reduce using rule 46 (expr_let_body)]
    '/'       [reduce using rule 46 (expr_let_body)]
    '.'       [reduce using rule 46 (expr_let_body)]
    '@'       [reduce using rule 46 (expr_let_body)]
    $default  reduce using rule 46 (expr_let_body)


State 123

   22 expr: expr . '.' OBJECTID '(' expr_list_comma_sep ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   32     | expr . '+' expr
   33     | expr . '-' expr
   34     | expr . '*' expr
   35     | expr . '/' expr
   37     | expr . '<' expr
   38     | expr . LE expr
   39     | expr . '=' expr
   47 expr_let_body: OBJECTID ':' TYPEID ASSIGN expr . IN expr
   49              | OBJECTID ':' TYPEID ASSIGN expr . ',' expr_let_body

    IN   shift, and go to state 130
    LE   shift, and go to state 66
    '<'  shift, and go to state 67
    '='  shift, and go to state 68
    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '*'  shift, and go to state 71
    '/'  shift, and go to state 72
    '.'  shift, and go to state 73
    ','  shift, and go to state 131
    '@'  shift, and go to state 74


State 124

   48 expr_let_body: OBJECTID ':' TYPEID ',' expr_let_body .

    $default  reduce using rule 48 (expr_let_body)


State 125

   52 case_: OBJECTID ':' TYPEID . DARROW expr

    DARROW  shift, and go to state 132


State 126

   51 case_branch_list: case_branch_list case_ ';' .

    $default  reduce using rule 51 (case_branch_list)


State 127

   22 expr: expr '.' OBJECTID '(' expr_list_comma_sep ')' .

    $default  reduce using rule 22 (expr)


State 128

   16 expr_list_comma_sep: . %empty
   17                    | . expr
   18                    | . expr_list_comma_sep ',' expr
   21 expr: . OBJECTID ASSIGN expr
   22     | . expr '.' OBJECTID '(' expr_list_comma_sep ')'
   23     | . expr '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   23     | expr '@' TYPEID '.' OBJECTID '(' . expr_list_comma_sep ')'
   24     | . OBJECTID '(' expr_list_comma_sep ')'
   25     | . IF expr THEN expr ELSE expr FI
   26     | . WHILE expr LOOP expr POOL
   27     | . '{' expr_list_semicolon_sep '}'
   28     | . LET expr_let_body
   29     | . CASE expr OF case_branch_list ESAC
   30     | . NEW TYPEID
   31     | . ISVOID expr
   32     | . expr '+' expr
   33     | . expr '-' expr
   34     | . expr '*' expr
   35     | . expr '/' expr
   36     | . '~' expr
   37     | . expr '<' expr
   38     | . expr LE expr
   39     | . expr '=' expr
   40     | . NOT expr
   41     | . '(' expr ')'
   42     | . OBJECTID
   43     | . INT_CONST
   44     | . STR_CONST
   45     | . BOOL_CONST

    IF          shift, and go to state 36
    LET         shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    $default  reduce using rule 16 (expr_list_comma_sep)

    expr_list_comma_sep  go to state 133
    expr                 go to state 82


State 129

   25 expr: IF expr THEN expr ELSE expr FI .

    $default  reduce using rule 25 (expr)


State 130

   21 expr: . OBJECTID ASSIGN expr
   22     | . expr '.' OBJECTID '(' expr_list_comma_sep ')'
   23     | . expr '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   24     | . OBJECTID '(' expr_list_comma_sep ')'
   25     | . IF expr THEN expr ELSE expr FI
   26     | . WHILE expr LOOP expr POOL
   27     | . '{' expr_list_semicolon_sep '}'
   28     | . LET expr_let_body
   29     | . CASE expr OF case_branch_list ESAC
   30     | . NEW TYPEID
   31     | . ISVOID expr
   32     | . expr '+' expr
   33     | . expr '-' expr
   34     | . expr '*' expr
   35     | . expr '/' expr
   36     | . '~' expr
   37     | . expr '<' expr
   38     | . expr LE expr
   39     | . expr '=' expr
   40     | . NOT expr
   41     | . '(' expr ')'
   42     | . OBJECTID
   43     | . INT_CONST
   44     | . STR_CONST
   45     | . BOOL_CONST
   47 expr_let_body: OBJECTID ':' TYPEID ASSIGN expr IN . expr

    IF          shift, and go to state 36
    LET         shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    expr  go to state 134


State 131

   46 expr_let_body: . OBJECTID ':' TYPEID IN expr
   47              | . OBJECTID ':' TYPEID ASSIGN expr IN expr
   48              | . OBJECTID ':' TYPEID ',' expr_let_body
   49              | . OBJECTID ':' TYPEID ASSIGN expr ',' expr_let_body
   49              | OBJECTID ':' TYPEID ASSIGN expr ',' . expr_let_body

    OBJECTID  shift, and go to state 53

    expr_let_body  go to state 135


State 132

   21 expr: . OBJECTID ASSIGN expr
   22     | . expr '.' OBJECTID '(' expr_list_comma_sep ')'
   23     | . expr '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   24     | . OBJECTID '(' expr_list_comma_sep ')'
   25     | . IF expr THEN expr ELSE expr FI
   26     | . WHILE expr LOOP expr POOL
   27     | . '{' expr_list_semicolon_sep '}'
   28     | . LET expr_let_body
   29     | . CASE expr OF case_branch_list ESAC
   30     | . NEW TYPEID
   31     | . ISVOID expr
   32     | . expr '+' expr
   33     | . expr '-' expr
   34     | . expr '*' expr
   35     | . expr '/' expr
   36     | . '~' expr
   37     | . expr '<' expr
   38     | . expr LE expr
   39     | . expr '=' expr
   40     | . NOT expr
   41     | . '(' expr ')'
   42     | . OBJECTID
   43     | . INT_CONST
   44     | . STR_CONST
   45     | . BOOL_CONST
   52 case_: OBJECTID ':' TYPEID DARROW . expr

    IF          shift, and go to state 36
    LET         shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    expr  go to state 136


State 133

   18 expr_list_comma_sep: expr_list_comma_sep . ',' expr
   23 expr: expr '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep . ')'

    ')'  shift, and go to state 137
    ','  shift, and go to state 104


State 134

   22 expr: expr . '.' OBJECTID '(' expr_list_comma_sep ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   32     | expr . '+' expr
   33     | expr . '-' expr
   34     | expr . '*' expr
   35     | expr . '/' expr
   37     | expr . '<' expr
   38     | expr . LE expr
   39     | expr . '=' expr
   47 expr_let_body: OBJECTID ':' TYPEID ASSIGN expr IN expr .

    LE   shift, and go to state 66
    '<'  shift, and go to state 67
    '='  shift, and go to state 68
    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '*'  shift, and go to state 71
    '/'  shift, and go to state 72
    '.'  shift, and go to state 73
    '@'  shift, and go to state 74

    LE        [reduce using rule 47 (expr_let_body)]
    '<'       [reduce using rule 47 (expr_let_body)]
    '='       [reduce using rule 47 (expr_let_body)]
    '+'       [reduce using rule 47 (expr_let_body)]
    '-'       [reduce using rule 47 (expr_let_body)]
    '*'       [reduce using rule 47 (expr_let_body)]
    '/'       [reduce using rule 47 (expr_let_body)]
    '.'       [reduce using rule 47 (expr_let_body)]
    '@'       [reduce using rule 47 (expr_let_body)]
    $default  reduce using rule 47 (expr_let_body)


State 135

   49 expr_let_body: OBJECTID ':' TYPEID ASSIGN expr ',' expr_let_body .

    $default  reduce using rule 49 (expr_let_body)


State 136

   22 expr: expr . '.' OBJECTID '(' expr_list_comma_sep ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')'
   32     | expr . '+' expr
   33     | expr . '-' expr
   34     | expr . '*' expr
   35     | expr . '/' expr
   37     | expr . '<' expr
   38     | expr . LE expr
   39     | expr . '=' expr
   52 case_: OBJECTID ':' TYPEID DARROW expr .

    LE   shift, and go to state 66
    '<'  shift, and go to state 67
    '='  shift, and go to state 68
    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '*'  shift, and go to state 71
    '/'  shift, and go to state 72
    '.'  shift, and go to state 73
    '@'  shift, and go to state 74

    $default  reduce using rule 52 (case_)


State 137

   23 expr: expr '@' TYPEID '.' OBJECTID '(' expr_list_comma_sep ')' .

    $default  reduce using rule 23 (expr)
