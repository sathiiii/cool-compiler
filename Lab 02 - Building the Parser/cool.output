Nonterminals useless in grammar

   formal_list
   formal
   expr
   case_
   case_branch_list
   expr_let_body
   expr_list_comma_sep
   expr_list_semicolon_sep


Terminals unused in grammar

   ELSE
   FI
   IF
   IN
   LET
   LOOP
   POOL
   THEN
   WHILE
   CASE
   ESAC
   OF
   DARROW
   NEW
   ISVOID
   STR_CONST
   INT_CONST
   BOOL_CONST
   ASSIGN
   NOT
   LE
   ERROR
   '<'
   '='
   '+'
   '-'
   '*'
   '/'
   '~'
   '.'
   '('
   ')'
   ','


Rules useless in grammar

   10 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' expr '}'
   11        | OBJECTID ':' TYPEID ASSIGN expr

   12 formal_list: %empty
   13            | formal
   14            | formal_list ',' formal

   15 formal: OBJECTID ':' TYPEID

   16 expr: OBJECTID ASSIGN expr


State 10 conflicts: 1 shift/reduce
State 16 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: class_list

    2 class_list: class ';'
    3           | class_list class ';'

    4 class: CLASS TYPEID '{' feature_list '}' ';'
    5      | CLASS TYPEID INHERITS TYPEID '{' feature_list '}' ';'

    6 feature_list: %empty
    7             | feature ';'
    8             | feature_list feature ';'

    9 feature: OBJECTID ':' TYPEID


Terminals, with rules where they appear

$end (0) 0
'(' (40)
')' (41)
'*' (42)
'+' (43)
',' (44)
'-' (45)
'.' (46)
'/' (47)
':' (58) 9
';' (59) 2 3 4 5 7 8
'<' (60)
'=' (61)
'{' (123) 4 5
'}' (125) 4 5
'~' (126)
error (256)
CLASS (258) 4 5
ELSE (259)
FI (260)
IF (261)
IN (262)
INHERITS (263) 5
LET (264)
LOOP (265)
POOL (266)
THEN (267)
WHILE (268)
CASE (269)
ESAC (270)
OF (271)
DARROW (272)
NEW (273)
ISVOID (274)
STR_CONST (275)
INT_CONST (276)
BOOL_CONST (277)
TYPEID (278) 4 5 9
OBJECTID (279) 9
ASSIGN (280)
NOT (281)
LE (282)
ERROR (283)


Nonterminals, with rules where they appear

$accept (44)
    on left: 0
program (45)
    on left: 1, on right: 0
class_list (46)
    on left: 2 3, on right: 1 3
class (47)
    on left: 4 5, on right: 2 3
feature_list (48)
    on left: 6 7 8, on right: 4 5 8
feature (49)
    on left: 9, on right: 7 8


State 0

    0 $accept: . program $end

    CLASS  shift, and go to state 1

    program     go to state 2
    class_list  go to state 3
    class       go to state 4


State 1

    4 class: CLASS . TYPEID '{' feature_list '}' ';'
    5      | CLASS . TYPEID INHERITS TYPEID '{' feature_list '}' ';'

    TYPEID  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: class_list .
    3 class_list: class_list . class ';'

    CLASS  shift, and go to state 1

    $default  reduce using rule 1 (program)

    class  go to state 7


State 4

    2 class_list: class . ';'

    ';'  shift, and go to state 8


State 5

    4 class: CLASS TYPEID . '{' feature_list '}' ';'
    5      | CLASS TYPEID . INHERITS TYPEID '{' feature_list '}' ';'

    INHERITS  shift, and go to state 9
    '{'       shift, and go to state 10


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 class_list: class_list class . ';'

    ';'  shift, and go to state 11


State 8

    2 class_list: class ';' .

    $default  reduce using rule 2 (class_list)


State 9

    5 class: CLASS TYPEID INHERITS . TYPEID '{' feature_list '}' ';'

    TYPEID  shift, and go to state 12


State 10

    4 class: CLASS TYPEID '{' . feature_list '}' ';'

    OBJECTID  shift, and go to state 13

    OBJECTID  [reduce using rule 6 (feature_list)]
    $default  reduce using rule 6 (feature_list)

    feature_list  go to state 14
    feature       go to state 15


State 11

    3 class_list: class_list class ';' .

    $default  reduce using rule 3 (class_list)


State 12

    5 class: CLASS TYPEID INHERITS TYPEID . '{' feature_list '}' ';'

    '{'  shift, and go to state 16


State 13

    9 feature: OBJECTID . ':' TYPEID

    ':'  shift, and go to state 17


State 14

    4 class: CLASS TYPEID '{' feature_list . '}' ';'
    8 feature_list: feature_list . feature ';'

    OBJECTID  shift, and go to state 13
    '}'       shift, and go to state 18

    feature  go to state 19


State 15

    7 feature_list: feature . ';'

    ';'  shift, and go to state 20


State 16

    5 class: CLASS TYPEID INHERITS TYPEID '{' . feature_list '}' ';'

    OBJECTID  shift, and go to state 13

    OBJECTID  [reduce using rule 6 (feature_list)]
    $default  reduce using rule 6 (feature_list)

    feature_list  go to state 21
    feature       go to state 15


State 17

    9 feature: OBJECTID ':' . TYPEID

    TYPEID  shift, and go to state 22


State 18

    4 class: CLASS TYPEID '{' feature_list '}' . ';'

    ';'  shift, and go to state 23


State 19

    8 feature_list: feature_list feature . ';'

    ';'  shift, and go to state 24


State 20

    7 feature_list: feature ';' .

    $default  reduce using rule 7 (feature_list)


State 21

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list . '}' ';'
    8 feature_list: feature_list . feature ';'

    OBJECTID  shift, and go to state 13
    '}'       shift, and go to state 25

    feature  go to state 19


State 22

    9 feature: OBJECTID ':' TYPEID .

    $default  reduce using rule 9 (feature)


State 23

    4 class: CLASS TYPEID '{' feature_list '}' ';' .

    $default  reduce using rule 4 (class)


State 24

    8 feature_list: feature_list feature ';' .

    $default  reduce using rule 8 (feature_list)


State 25

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list '}' . ';'

    ';'  shift, and go to state 26


State 26

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list '}' ';' .

    $default  reduce using rule 5 (class)
